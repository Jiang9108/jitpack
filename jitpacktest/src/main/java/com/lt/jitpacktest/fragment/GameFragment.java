package com.lt.jitpacktest.fragment;import android.app.Dialog;import android.content.Context;import android.content.Intent;import android.graphics.Bitmap;import android.os.Build;import android.os.Bundle;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.AdapterView;import android.widget.BaseAdapter;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.TextView;import android.widget.Toast;import androidx.annotation.RequiresApi;import androidx.fragment.app.Fragment;import com.lt.jitpacktest.R;import com.lt.jitpacktest.activity.YunBuGameDetailsDYActivity;import com.lt.jitpacktest.activity.YunBuGameDetailsJuXiangWanActivity;import com.lt.jitpacktest.activity.YunBuGameDetailsXiQuActivity;import com.lt.jitpacktest.activity.YunBuGameDetailsXianWanActivity;import com.lt.jitpacktest.activity.YunBuRewardWebActivity;import com.lt.jitpacktest.activity.YunBuSearchActivity;import com.lt.jitpacktest.utils.HttpUtils;import com.lt.jitpacktest.utils.SessionSingleton;import com.lt.jitpacktest.utils.Utils;import com.lt.jitpacktest.xPullRefresh.XListView;import com.lt.jitpacktest.yunbuimageload.AsyncImageLoader;import com.lt.jitpacktest.yunbuimageload.FileCache;import com.lt.jitpacktest.yunbuimageload.MemoryCache;import org.json.JSONArray;import org.json.JSONException;import org.json.JSONObject;import java.io.File;import java.io.IOException;import java.text.ParseException;import java.util.HashMap;import java.util.Map;public class GameFragment extends Fragment {    private View view;    private Context context;    public Dialog mLoading;    private TextView tv_game_title_ty1, tv_game_title_ty2, tv_game_title_ty3, tv_game_title_ty4;    private TextView tv_game_title_ty1_zhishiqi, tv_game_title_ty2_zhishiqi, tv_game_title_ty3_zhishiqi, tv_game_title_ty4_zhishiqi;    private LinearLayout ll_game_title_sousuo, ll_yunbu_game_xuanshang;    private XListView lv_game;    private GameAdapter adapter;    private JSONArray gameListArray;    private String gameStatus;    private String chanelUserAccount, token, gameListUrl, searchGameUrl, searchWord, ChannelLoadSerail;    private int page;    private int showTypeGame = 0;    private JSONArray filterArray;    private JSONObject GameSingle;    @RequiresApi(api = Build.VERSION_CODES.JELLY_BEAN)    @Override    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        view = inflater.inflate(R.layout.fragment_yun_bu_game, container, false);        context = getContext();        mLoading = Utils.createLoadingDialog(context, "正在加载......");        mLoading.setCancelable(true);        mLoading.show();        initview();        setlisetener();        return view;    }    private void initview() {        lv_game = view.findViewById(R.id.xlv_game);        tv_game_title_ty1 = view.findViewById(R.id.tv_game_title_ty1);        tv_game_title_ty2 = view.findViewById(R.id.tv_game_title_ty2);        tv_game_title_ty3 = view.findViewById(R.id.tv_game_title_ty3);        tv_game_title_ty4 = view.findViewById(R.id.tv_game_title_ty4);        tv_game_title_ty1_zhishiqi = view.findViewById(R.id.tv_game_title_ty1_zhishiqi);        tv_game_title_ty2_zhishiqi = view.findViewById(R.id.tv_game_title_ty2_zhishiqi);        tv_game_title_ty3_zhishiqi = view.findViewById(R.id.tv_game_title_ty3_zhishiqi);        tv_game_title_ty4_zhishiqi = view.findViewById(R.id.tv_game_title_ty4_zhishiqi);        ll_game_title_sousuo = view.findViewById(R.id.ll_game_title_sousuo);        ll_yunbu_game_xuanshang = view.findViewById(R.id.ll_yunbu_game_xuanshang);        gameListArray = new JSONArray();        try {            token = SessionSingleton.getInstance().AccountSingle.getString("token");            chanelUserAccount = SessionSingleton.getInstance().AccountSingle.getString("chanelUserAccount");            ChannelLoadSerail = SessionSingleton.getInstance().AccountSingle.getString("ChannelLoadSerail");            //ChannelLoadSerail = "嘻趣聚享多游闲玩";            gameListUrl = SessionSingleton.getInstance().requestBaseUrl + "gameCheckApi?";            String showTabSign = SessionSingleton.getInstance().AccountSingle.getString("showTabSign");            //showTabSign="游戏";            if (showTabSign.contains("游戏")) {                showTypeGame = 1;            }            //是否显示应用赚            if (SessionSingleton.getInstance().AccountSingle.getString("showShanYouRewardTask").equals("yes")) {                ll_yunbu_game_xuanshang.setVisibility(View.VISIBLE);            } else {                ll_yunbu_game_xuanshang.setVisibility(View.GONE);            }        } catch (Exception e) {            e.printStackTrace();        }        gameStatus = "0";        page = 1;        GetGameList(gameStatus, page);        lv_game.setPullRefreshEnable(true);        lv_game.setPullLoadEnable(true);        adapter = new GameAdapter(context);        lv_game.setXListViewListener(new XListView.IXListViewListener() {            @Override            public void onRefresh() {                page = 1;                mLoading.show();                GetGameList(gameStatus, page);                Load();            }            @Override            public void onLoadMore() {                page = page + 1;                mLoading.show();                GetGameList(gameStatus, page);                Load();            }        });        lv_game.setAdapter(adapter);        lv_game.setOnItemClickListener(new AdapterView.OnItemClickListener() {            @Override            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {                try {                    GameSingle = gameListArray.getJSONObject(position - 1);                    Long stoptime = Utils.data2(GameSingle.getString("stopTime"), "yyyy-MM-ddHH:mm:ss");                    Long nowtime = System.currentTimeMillis();                    if (nowtime < stoptime) {                    } else {                        Utils.showToast(context, "该游戏已结束");                    }                } catch (JSONException e) {                    e.printStackTrace();                } catch (ParseException e) {                    e.printStackTrace();                }            }        });    }    private void Load() {        lv_game.stopLoadMore();        lv_game.stopRefresh();    }    private void setlisetener() {        ll_game_title_sousuo.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                Intent intent = new Intent(getActivity(), YunBuSearchActivity.class);                intent.putExtra("SEARCHTYPE", "game");                startActivity(intent);            }        });        ll_yunbu_game_xuanshang.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                String sign = null;                try {                    sign = Utils.getMD5("70-d90fa1f5c138409d828907740ea6965f:sdkUserId=" + chanelUserAccount + "&").toUpperCase();                } catch (IOException e) {                    e.printStackTrace();                }                String url = "https://sdkh5.gouzixsw.com/#/?channelId=70&userId=" + chanelUserAccount + "&sign=" + sign;                Intent intent = new Intent(getActivity(), YunBuRewardWebActivity.class);                intent.putExtra("CLICKLINK", url);                startActivity(intent);            }        });        tv_game_title_ty1.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                tv_game_title_ty1.setTextColor(getResources().getColor(R.color.yunbu_textblack));                tv_game_title_ty2.setTextColor(getResources().getColor(R.color.yunbu_textgray2));                tv_game_title_ty3.setTextColor(getResources().getColor(R.color.yunbu_textgray2));                tv_game_title_ty4.setTextColor(getResources().getColor(R.color.yunbu_textgray2));                tv_game_title_ty1.setTextSize(17);                tv_game_title_ty2.setTextSize(14);                tv_game_title_ty3.setTextSize(14);                tv_game_title_ty4.setTextSize(14);                tv_game_title_ty1_zhishiqi.setVisibility(View.VISIBLE);                tv_game_title_ty2_zhishiqi.setVisibility(View.GONE);                tv_game_title_ty3_zhishiqi.setVisibility(View.GONE);                tv_game_title_ty4_zhishiqi.setVisibility(View.GONE);                gameStatus = "0";                page = 1;                mLoading.show();                GetGameList(gameStatus, page);                adapter.notifyDataSetChanged();            }        });        tv_game_title_ty2.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                tv_game_title_ty1.setTextColor(getResources().getColor(R.color.yunbu_textgray2));                tv_game_title_ty2.setTextColor(getResources().getColor(R.color.yunbu_textblack));                tv_game_title_ty3.setTextColor(getResources().getColor(R.color.yunbu_textgray2));                tv_game_title_ty4.setTextColor(getResources().getColor(R.color.yunbu_textgray2));                tv_game_title_ty1.setTextSize(14);                tv_game_title_ty2.setTextSize(17);                tv_game_title_ty3.setTextSize(14);                tv_game_title_ty4.setTextSize(14);                tv_game_title_ty1_zhishiqi.setVisibility(View.GONE);                tv_game_title_ty2_zhishiqi.setVisibility(View.VISIBLE);                tv_game_title_ty3_zhishiqi.setVisibility(View.GONE);                tv_game_title_ty4_zhishiqi.setVisibility(View.GONE);                gameStatus = "2";                page = 1;                mLoading.show();                GetGameList(gameStatus, page);                adapter.notifyDataSetChanged();            }        });        tv_game_title_ty3.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                tv_game_title_ty1.setTextColor(getResources().getColor(R.color.yunbu_textgray2));                tv_game_title_ty2.setTextColor(getResources().getColor(R.color.yunbu_textgray2));                tv_game_title_ty3.setTextColor(getResources().getColor(R.color.yunbu_textblack));                tv_game_title_ty4.setTextColor(getResources().getColor(R.color.yunbu_textgray2));                tv_game_title_ty1.setTextSize(14);                tv_game_title_ty2.setTextSize(14);                tv_game_title_ty3.setTextSize(17);                tv_game_title_ty4.setTextSize(14);                tv_game_title_ty1_zhishiqi.setVisibility(View.GONE);                tv_game_title_ty2_zhishiqi.setVisibility(View.GONE);                tv_game_title_ty3_zhishiqi.setVisibility(View.VISIBLE);                tv_game_title_ty4_zhishiqi.setVisibility(View.GONE);                gameStatus = "1";                page = 1;                mLoading.show();                GetGameList(gameStatus, page);            }        });        tv_game_title_ty4.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                tv_game_title_ty1.setTextColor(getResources().getColor(R.color.yunbu_textgray2));                tv_game_title_ty2.setTextColor(getResources().getColor(R.color.yunbu_textgray2));                tv_game_title_ty3.setTextColor(getResources().getColor(R.color.yunbu_textgray2));                tv_game_title_ty4.setTextColor(getResources().getColor(R.color.yunbu_textblack));                tv_game_title_ty1.setTextSize(14);                tv_game_title_ty2.setTextSize(14);                tv_game_title_ty3.setTextSize(14);                tv_game_title_ty4.setTextSize(17);                tv_game_title_ty1_zhishiqi.setVisibility(View.GONE);                tv_game_title_ty2_zhishiqi.setVisibility(View.GONE);                tv_game_title_ty3_zhishiqi.setVisibility(View.GONE);                tv_game_title_ty4_zhishiqi.setVisibility(View.VISIBLE);                gameStatus = "3";                page = 1;                mLoading.show();                GetGameList(gameStatus, page);            }        });    }    //=============================================================================================================================================================    private void GetGameList(final String adtype, final int pageindex) {        //post请求，根据自己需要选择返回什么类型数据        Map<String, String> params = new HashMap<>();        params.put("apiType", adtype);        params.put("page", String.valueOf(pageindex));        params.put("token", token);        params.put("chanelUserAccount", chanelUserAccount);        params.put("ChannelLoadSerail", ChannelLoadSerail);        params.put("limit", "10");        HttpUtils.doHttpReqeust("GET", gameListUrl, params, new HttpUtils.StringCallback() {            @Override            public void onSuccess(String response) {                try {                    JSONObject returnJSONObject = new JSONObject(response);                    if (returnJSONObject.getString("status").equals("success")) {                        JSONArray array = returnJSONObject.getJSONArray("data");                        filterArray=new JSONArray();                        if (adtype.equals("0")) {                            //简单                          /*  if (pageindex <= 1) {                                gameListArray = array;                                if (SessionSingleton.getInstance().AccountSingle.getJSONArray("gameRecommandArray").length() < 4) {                                    if (showTypeGame == 1) {                                        JSONArray gameRecommandArray = new JSONArray();                                        for (int i = 0; i < 4; i++) {                                            JSONObject object = array.getJSONObject(i);                                            gameRecommandArray.put(object);                                        }                                        SessionSingleton.getInstance().AccountSingle.put("gameRecommandArray", gameRecommandArray);                                    }                                }                            } else {                                for (int i = 0; i < array.length(); i++) {                                    gameListArray.put(array.getJSONObject(i));                                }                            }*/                            filterArray=array;                            hiddenLimitGame();                        } else if (adtype.equals("1")) {                            //手游                           /* if (pageindex <= 1) {                                gameListArray = array;                            } else {                                for (int i = 0; i < array.length(); i++) {                                    gameListArray.put(array.getJSONObject(i));                                }                            }*/                            filterArray=array;                            hiddenLimitGame();                        } else if (adtype.equals("2")) {                            //充值                           /* if (pageindex <= 1) {                                gameListArray = array;                            } else {                                for (int i = 0; i < array.length(); i++) {                                    gameListArray.put(array.getJSONObject(i));                                }                            }*/                            filterArray=array;                            hiddenLimitGame();                        } else if (adtype.equals("3")) {                            //捕鱼                           /* if (pageindex <= 1) {                                gameListArray = array;                            } else {                                for (int i = 0; i < array.length(); i++) {                                    gameListArray.put(array.getJSONObject(i));                                }                            }*/                            filterArray=array;                            hiddenLimitGame();                        }                    } else {                        Utils.showToast(context, returnJSONObject.getString("msg"));                    }                    mLoading.dismiss();                    adapter.notifyDataSetChanged();                } catch (JSONException e) {                    e.printStackTrace();                }            }            @Override            public void onFaileure(int code, Exception e) {                e.printStackTrace();            }        });    }    public void hiddenLimitGame() {        SessionSingleton.getInstance().mysp = getActivity().getSharedPreferences("limit",context.MODE_PRIVATE);        String limit= SessionSingleton.getInstance().mysp.getString("limitgame", "") + SessionSingleton.getInstance().limitGame;        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {            try {                int length = filterArray.length();                if (!limit.equals("none")) {                    for (int i = 0; i < length; i++) {                        JSONObject single = filterArray.getJSONObject(i);                        if (!single.isNull("adnamecut")) {                            String adnamecut = single.getString("adnamecut").replace(" ", "");                            if (limit.indexOf(adnamecut) > -1) {                                filterArray.remove(i);                                i = i - 1;                                length = length - 1;                            }                        } else if (!single.isNull("adname")) {                            //闲玩                            String adname = single.getString("adname").replace(" ", "");                            if (limit.indexOf(adname) > -1) {                                filterArray.remove(i);                                i = i - 1;                                length = length - 1;                            }                        } else {                            //聚享玩                            String title = single.getString("title").replace(" ", "");                            if (limit.indexOf(title) > -1) {                                filterArray.remove(i);                                i = i - 1;                                length = length - 1;                            }                        }                    }                }                if (page <= 1) {                    gameListArray = filterArray;                    if (SessionSingleton.getInstance().AccountSingle.getJSONArray("gameRecommandArray").length() < 4) {                        if (showTypeGame == 1) {                            JSONArray gameRecommandArray = new JSONArray();                            for (int i = 0; i < 4; i++) {                                JSONObject object = filterArray.getJSONObject(i);                                gameRecommandArray.put(object);                            }                            SessionSingleton.getInstance().AccountSingle.put("gameRecommandArray", gameRecommandArray);                        }                    }                } else {                    for (int i = 0; i < filterArray.length(); i++) {                        gameListArray.put(filterArray.getJSONObject(i));                    }                }            } catch (JSONException e) {                e.printStackTrace();            }        } else {            return;        }    }    //=============================================================================================================================================================    public class GameAdapter extends BaseAdapter {        private AsyncImageLoader imageLoader;//异步组件        private LayoutInflater inflater;        public GameAdapter(Context context) {            //inflater = LayoutInflater.from(context);            inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);            MemoryCache mcache = new MemoryCache();//内存缓存            String paht = getActivity().getApplicationContext().getFilesDir().getAbsolutePath();            File cacheDir = new File(paht, "yunbucache");//缓存根目录            FileCache fcache = new FileCache(context, cacheDir, "yunbuimage");//文件缓存            imageLoader = new AsyncImageLoader(context, mcache, fcache);        }        @Override        public int getCount() {            return gameListArray.length();        }        @Override        public Object getItem(int position) {            return position;        }        @Override        public long getItemId(int position) {            return position;        }        @RequiresApi(api = Build.VERSION_CODES.JELLY_BEAN)        @Override        public View getView(int position, View convertView, ViewGroup parent) {            ViewHolder holder;            holder = new ViewHolder();            convertView = inflater.inflate(R.layout.item_yun_bu_game_type, null);            holder.iv_item_game_head = (ImageView) convertView.findViewById(R.id.iv_item_game_head);            holder.tv_item_game_title = (TextView) convertView.findViewById(R.id.tv_item_game_title);            holder.tv_item_game_msg = (TextView) convertView.findViewById(R.id.tv_item_game_msg);            holder.tv_item_game_money = (TextView) convertView.findViewById(R.id.tv_item_game_money);            holder.tv_item_game_day = (TextView) convertView.findViewById(R.id.tv_item_game_day);            try {                JSONObject single = gameListArray.getJSONObject(position);                holder.tv_item_game_title.setText(single.getString("title"));                Long stoptime = Utils.data2(single.getString("stopTime"), "yyyy-MM-ddHH:mm:ss");                Long nowtime = System.currentTimeMillis();                if (nowtime < stoptime) {                    holder.tv_item_game_day.setText("结束时间：" + single.getString("stopTime"));                    holder.tv_item_game_day.setBackground(getResources().getDrawable(R.drawable.orange_shape_c8_sanjiao));                } else {                    holder.tv_item_game_day.setText("游戏已结束");                    holder.tv_item_game_day.setBackground(getResources().getDrawable(R.drawable.gray_shape_c8_sanjiao));                }                holder.tv_item_game_msg.setText(single.getString("description"));                double money = single.getDouble("totalMoney");                holder.tv_item_game_money.setText(Utils.getDoubleString(money) + "元");                //异步加载图片，先从一级缓存、再二级缓存、最后网络获取图片                Bitmap bmp = imageLoader.loadBitmap(holder.iv_item_game_head, single.getString("logUrl"));                if (bmp == null) {                    holder.iv_item_game_head.setImageResource(R.drawable.ic_load_iname);                } else {                    holder.iv_item_game_head.setImageBitmap(bmp);                }            } catch (Exception e) {                e.printStackTrace();            }            return convertView;        }        class ViewHolder {            TextView tv_item_game_title, tv_item_game_msg, tv_item_game_money, tv_item_game_day;            ImageView iv_item_game_head;        }    }    //=============================================================================================================================================================    private void goGameDetails() {        try {            if (GameSingle.getString("channelName").equals("嘻趣")) {                Intent intent = new Intent(getActivity(), YunBuGameDetailsXiQuActivity.class);                intent.putExtra("ADID", GameSingle.getString("adId"));                intent.putExtra("KeFuQQ", SessionSingleton.getInstance().XiQuSingle.getString("serverQQ"));                intent.putExtra("ShowFirst", SessionSingleton.getInstance().AccountSingle.getString("xiquShowFirstStep"));                startActivity(intent);            } else if (GameSingle.getString("channelName").equals("多游")) {                Intent intent = new Intent(getActivity(), YunBuGameDetailsDYActivity.class);                intent.putExtra("ADID", GameSingle.getString("adId"));                intent.putExtra("KeFuQQ", SessionSingleton.getInstance().DuoYouSingle.getString("serverQQ"));                intent.putExtra("ShowFirst", SessionSingleton.getInstance().AccountSingle.getString("duoyouShowFirstStep"));                startActivity(intent);            } else if (GameSingle.getString("channelName").equals("聚享游")) {                Intent intent = new Intent(getActivity(), YunBuGameDetailsJuXiangWanActivity.class);                intent.putExtra("ADID", GameSingle.getString("adId"));                intent.putExtra("KeFuQQ", SessionSingleton.getInstance().JuXiangWanSingle.getString("serverQQ"));                intent.putExtra("ShowFirst", SessionSingleton.getInstance().AccountSingle.getString("juxiangyouShowFirstStep"));                startActivity(intent);            } else if (GameSingle.getString("channelName").equals("闲玩")) {                Intent intent = new Intent(getActivity(), YunBuGameDetailsXianWanActivity.class);                intent.putExtra("ADID", GameSingle.getString("adId"));                intent.putExtra("KeFuQQ", SessionSingleton.getInstance().XianWanSingle.getString("serverQQ"));                intent.putExtra("ShowFirst", SessionSingleton.getInstance().AccountSingle.getString("xianwanShowFirstStep"));                startActivity(intent);            }        } catch (JSONException e) {            e.printStackTrace();        }    }}