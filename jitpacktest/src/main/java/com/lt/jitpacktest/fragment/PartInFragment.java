package com.lt.jitpacktest.fragment;import android.app.Dialog;import android.content.Context;import android.content.Intent;import android.graphics.Bitmap;import android.os.Build;import android.os.Bundle;import android.os.CountDownTimer;import android.os.Handler;import android.view.Gravity;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.AdapterView;import android.widget.BaseAdapter;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.PopupWindow;import android.widget.TextView;import androidx.annotation.RequiresApi;import androidx.fragment.app.Fragment;import com.lt.jitpacktest.R;import com.lt.jitpacktest.activity.YunBuGameDetailsDYActivity;import com.lt.jitpacktest.activity.YunBuGameDetailsJuXiangWanActivity;import com.lt.jitpacktest.activity.YunBuGameDetailsXiQuActivity;import com.lt.jitpacktest.activity.YunBuGameDetailsXianWanActivity;import com.lt.jitpacktest.activity.YunBuRewardActivity;import com.lt.jitpacktest.activity.YunBuRewardBillActivity;import com.lt.jitpacktest.activity.YunBuWelfareActivity;import com.lt.jitpacktest.utils.HttpUtils;import com.lt.jitpacktest.utils.SessionSingleton;import com.lt.jitpacktest.utils.Utils;import com.lt.jitpacktest.xPullRefresh.XListView;import com.lt.jitpacktest.yunbuimageload.AsyncImageLoader;import com.lt.jitpacktest.yunbuimageload.FileCache;import com.lt.jitpacktest.yunbuimageload.MemoryCache;import org.json.JSONArray;import org.json.JSONException;import org.json.JSONObject;import java.io.File;import java.io.IOException;import java.io.UnsupportedEncodingException;import java.net.URLEncoder;import java.text.DateFormat;import java.text.SimpleDateFormat;import java.util.Date;import java.util.HashMap;import java.util.Map;public class PartInFragment extends Fragment {    private View view;    private Context context;    public Dialog mLoading;    private TextView tv_part_in_title_id, tv_part_in_title_reward_notes, tv_part_in_title_welfare;    private LinearLayout ll_part_in_title_reward;    private TextView tv_part_in_title_game, tv_part_in_title_reward;    private TextView tv_part_in_title_reward_having, tv_part_in_title_reward_wait_audit,            tv_part_in_title_reward_finish, tv_part_in_title_reward_unpass;    private TextView tv_part_in_title_reward_having_zhishiqi, tv_part_in_title_reward_wait_audit_zhishiqi,            tv_part_in_title_reward_finish_zhishiqi, tv_part_in_title_reward_unpass_zhishiqi;    private ImageView iv_part_in_title_recommend_one_image, iv_part_in_title_recommend_two_image, iv_part_in_title_recommend_three_image, iv_part_in_title_recommend_four_image;    private TextView tv_part_in_title_recommend_one_name, tv_part_in_title_recommend_two_name, tv_part_in_title_recommend_three_name, tv_part_in_title_recommend_four_name;    private LinearLayout ll_part_in_title_show_game_reward;    private LinearLayout ll_part_in_no_item, ll_part_in_recommend;    private XListView lv_part_in;    private PartInListAdapter adapter;    private JSONArray partInListArray;    private JSONArray recommendGoods;    private String reward_Url, givieupTaskUrl, orderStatus, dataType = "0", token, withdrawType, chanelUserAccount, channelAccount, productId;    private int page = 1;    private PopupWindow tosatPopuo;    private CountDownTimer timer;    private TextView tv_item_reward_part_in_time;    private Long datetimeFailLong = 0L, nowdatetime = 0L;    private int showPartinGame = 0, showPartinReward = 0;    private double controlMoneyScale;    private int AllGameRead = 0;    public Runnable HomeShareRunble;    private Handler mHandler;    private String androidosv, account, oaid, deviceid, imei1, sys_ver, deviceIdsEncode;    private String xiquGameSgin, xianwanSgin, dySgin, juxiangwanSgin;    private boolean isCreated = false;    private AsyncImageLoader imageLoader;//异步组件    @RequiresApi(api = Build.VERSION_CODES.JELLY_BEAN)    @Override    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        view = inflater.inflate(R.layout.fragment_yun_bu_part_in, container, false);        context = getContext();        isCreated = true;        mLoading = Utils.createLoadingDialog(context, "正在加载......");        mLoading.setCancelable(true);        mLoading.show();        MemoryCache mcache = new MemoryCache();//内存缓存        String paht = getActivity().getApplicationContext().getFilesDir().getAbsolutePath();        File cacheDir = new File(paht, "yunbucache");//缓存根目录        FileCache fcache = new FileCache(context, cacheDir, "yunbuimage");//文件缓存        imageLoader = new AsyncImageLoader(context, mcache, fcache);        initview();        setlistener();        return view;    }    @RequiresApi(api = Build.VERSION_CODES.JELLY_BEAN)    private void initview() {        lv_part_in = view.findViewById(R.id.xlv_part_in);        tv_part_in_title_id = view.findViewById(R.id.tv_part_in_title_id);        tv_part_in_title_reward_notes = view.findViewById(R.id.tv_part_in_title_reward_notes);        tv_part_in_title_welfare = view.findViewById(R.id.tv_part_in_title_welfare);        ll_part_in_title_show_game_reward = view.findViewById(R.id.ll_part_in_title_show_game_reward);        tv_part_in_title_reward = view.findViewById(R.id.tv_part_in_title_reward);        tv_part_in_title_game = view.findViewById(R.id.tv_part_in_title_game);        ll_part_in_title_reward = view.findViewById(R.id.ll_part_in_title_reward);        tv_part_in_title_reward_having = view.findViewById(R.id.tv_part_in_title_reward_having);        tv_part_in_title_reward_wait_audit = view.findViewById(R.id.tv_part_in_title_reward_wait_audit);        tv_part_in_title_reward_finish = view.findViewById(R.id.tv_part_in_title_reward_finish);        tv_part_in_title_reward_unpass = view.findViewById(R.id.tv_part_in_title_reward_unpass);        tv_part_in_title_reward_having_zhishiqi = view.findViewById(R.id.tv_part_in_title_reward_having_zhishiqi);        tv_part_in_title_reward_wait_audit_zhishiqi = view.findViewById(R.id.tv_part_in_title_reward_wait_audit_zhishiqi);        tv_part_in_title_reward_finish_zhishiqi = view.findViewById(R.id.tv_part_in_title_reward_finish_zhishiqi);        tv_part_in_title_reward_unpass_zhishiqi = view.findViewById(R.id.tv_part_in_title_reward_unpass_zhishiqi);        iv_part_in_title_recommend_one_image = view.findViewById(R.id.iv_part_in_title_recommend_one_image);        iv_part_in_title_recommend_two_image = view.findViewById(R.id.iv_part_in_title_recommend_two_image);        iv_part_in_title_recommend_three_image = view.findViewById(R.id.iv_part_in_title_recommend_three_image);        iv_part_in_title_recommend_four_image = view.findViewById(R.id.iv_part_in_title_recommend_four_image);        tv_part_in_title_recommend_one_name = view.findViewById(R.id.tv_part_in_title_recommend_one_name);        tv_part_in_title_recommend_two_name = view.findViewById(R.id.tv_part_in_title_recommend_two_name);        tv_part_in_title_recommend_three_name = view.findViewById(R.id.tv_part_in_title_recommend_three_name);        tv_part_in_title_recommend_four_name = view.findViewById(R.id.tv_part_in_title_recommend_four_name);        ll_part_in_no_item = view.findViewById(R.id.ll_part_in_no_item);        ll_part_in_recommend = view.findViewById(R.id.ll_part_in_recommend);        partInListArray = new JSONArray();        recommendGoods = new JSONArray();        reward_Url = SessionSingleton.getInstance().requestBaseUrl + "channelUserGetShareOrder?";        try {            token = SessionSingleton.getInstance().AccountSingle.getString("token");            withdrawType = SessionSingleton.getInstance().AccountSingle.getString("withdrawType");            chanelUserAccount = SessionSingleton.getInstance().AccountSingle.getString("chanelUserAccount");            channelAccount = SessionSingleton.getInstance().AccountSingle.getString("channelAccount");            controlMoneyScale = SessionSingleton.getInstance().AccountSingle.getDouble("moneyScale");            givieupTaskUrl = SessionSingleton.getInstance().requestBaseUrl + "userGetRewardTaskApi?";             if (SessionSingleton.getInstance().AccountSingle.isNull("id"))             {                 tv_part_in_title_id.setText("ID:重新打开后生成！");             }           else             {                 tv_part_in_title_id.setText("ID:"+SessionSingleton.getInstance().AccountSingle.getString("id"));             }            //todo            String showTabSign = SessionSingleton.getInstance().AccountSingle.getString("showTabSign");            JSONObject single=SessionSingleton.getInstance().AccountSingle;             //showTabSign = "游戏";            if (showTabSign.contains("悬赏")) {                showPartinReward = 1;            }            if (showTabSign.contains("游戏")) {                showPartinGame = 1;            }            androidosv = String.valueOf(Build.VERSION.SDK_INT);            account = SessionSingleton.getInstance().AccountSingle.getString("chanelUserAccount");            deviceid = SessionSingleton.getInstance().AccountSingle.getString("deviceNumber");            sys_ver = Build.VERSION.RELEASE;            imei1 = Utils.getIMEI(context, 1);            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {                oaid = SessionSingleton.getInstance().AccountSingle.getString("oaId");            } else {                oaid = "";            }            if (SessionSingleton.getInstance().dydeviceIdsEncode.equals("")) {                // 多个imei，请组成json字符串发过来，然后对device_ids,需要encode一下。                JSONObject jsonObject = new JSONObject();                jsonObject.put("1", Utils.getAndroidId(context)); // 获取手机第一个imei。                //jsonObject.put("2", Utils.getImei(context)); // 获取手机第二个imei。                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {                    jsonObject.put("7", deviceid);                } else {                    jsonObject.put("2", deviceid);                }                deviceIdsEncode = URLEncoder.encode(jsonObject.toString(), "utf-8");                SessionSingleton.getInstance().dydeviceIdsEncode = deviceIdsEncode;            } else {                deviceIdsEncode = SessionSingleton.getInstance().dydeviceIdsEncode;            }            // 第一步组装map            Map<String, String> paramsMap = new HashMap();            paramsMap.put("device_ids", deviceIdsEncode);            paramsMap.put("device_type", "2");            paramsMap.put("media_id", SessionSingleton.getInstance().DuoYouSingle.getString("key"));            paramsMap.put("user_id", account);            // 第二步生成sign，第二个参数是AppSecret，务必换成你的AppSecret            dySgin = Utils.generateSignature(paramsMap, SessionSingleton.getInstance().DuoYouSingle.getString("secret"));            xiquGameSgin = Utils.getMD5(SessionSingleton.getInstance().XiQuSingle.getString("key") + deviceid + oaid + androidosv + "2" + account + SessionSingleton.getInstance().XiQuSingle.getString("secret"));            xianwanSgin = Utils.getMD5(SessionSingleton.getInstance().XianWanSingle.getString("key") + deviceid + oaid + androidosv + "2" + account + SessionSingleton.getInstance().XianWanSingle.getString("secret"));            juxiangwanSgin = Utils.getMD5(SessionSingleton.getInstance().JuXiangWanSingle.getString("key") + account + SessionSingleton.getInstance().JuXiangWanSingle.getString("secret"));        } catch (JSONException e) {            String error=e.getMessage();            e.printStackTrace();        } catch (UnsupportedEncodingException e) {            String error=e.getMessage();            e.printStackTrace();        } catch (IOException e) {            String error=e.getMessage();            e.printStackTrace();        } catch (Exception e) {            String error=e.getMessage();            System.out.println(error);            e.printStackTrace();        }        if (withdrawType.equals("平台自提")) {            tv_part_in_title_reward_notes.setVisibility(View.GONE);        } else {            tv_part_in_title_reward_notes.setVisibility(View.VISIBLE);        }        if (showPartinReward == 1 && showPartinGame == 1) {            tv_part_in_title_reward.setBackground(getResources().getDrawable(R.color.yunbu_write));            tv_part_in_title_game.setBackground(getResources().getDrawable(R.color.yunbu_lightgreen));            tv_part_in_title_reward.setTextColor(getResources().getColor(R.color.yunbu_textblack));            tv_part_in_title_game.setTextColor(getResources().getColor(R.color.yunbu_write));            ll_part_in_title_show_game_reward.setVisibility(View.VISIBLE);            ll_part_in_title_reward.setVisibility(View.VISIBLE);            //tv_part_in_title_welfare.setVisibility(View.GONE);            tv_part_in_title_reward_having.setTextColor(getResources().getColor(R.color.yunbu_textblack));            tv_part_in_title_reward_wait_audit.setTextColor(getResources().getColor(R.color.yunbu_textgray));            tv_part_in_title_reward_finish.setTextColor(getResources().getColor(R.color.yunbu_textgray));            tv_part_in_title_reward_unpass.setTextColor(getResources().getColor(R.color.yunbu_textgray));            tv_part_in_title_reward_having_zhishiqi.setVisibility(View.VISIBLE);            tv_part_in_title_reward_wait_audit_zhishiqi.setVisibility(View.GONE);            tv_part_in_title_reward_finish_zhishiqi.setVisibility(View.GONE);            tv_part_in_title_reward_unpass_zhishiqi.setVisibility(View.GONE);            try {                recommendGoods = SessionSingleton.getInstance().AccountSingle.getJSONArray("gameRecommandArray");                String imageurl1 = recommendGoods.getJSONObject(0).getString("logUrl");                String imageurl2 = recommendGoods.getJSONObject(1).getString("logUrl");                String imageurl3 = recommendGoods.getJSONObject(2).getString("logUrl");                String imageurl4 = recommendGoods.getJSONObject(3).getString("logUrl");                String title1 = recommendGoods.getJSONObject(0).getString("title");                String title2 = recommendGoods.getJSONObject(1).getString("title");                String title3 = recommendGoods.getJSONObject(2).getString("title");                String title4 = recommendGoods.getJSONObject(3).getString("title");                //异步加载图片，先从一级缓存、再二级缓存、最后网络获取图片                Bitmap bmp1 = imageLoader.loadBitmap(iv_part_in_title_recommend_one_image, imageurl1);                if (bmp1 == null) {                    iv_part_in_title_recommend_one_image.setImageResource(R.drawable.ic_load_iname);                } else {                    iv_part_in_title_recommend_one_image.setImageBitmap(bmp1);                }                //异步加载图片，先从一级缓存、再二级缓存、最后网络获取图片                Bitmap bmp2 = imageLoader.loadBitmap(iv_part_in_title_recommend_two_image, imageurl2);                if (bmp2 == null) {                    iv_part_in_title_recommend_two_image.setImageResource(R.drawable.ic_load_iname);                } else {                    iv_part_in_title_recommend_two_image.setImageBitmap(bmp2);                }                //异步加载图片，先从一级缓存、再二级缓存、最后网络获取图片                Bitmap bmp3 = imageLoader.loadBitmap(iv_part_in_title_recommend_three_image, imageurl3);                if (bmp3 == null) {                    iv_part_in_title_recommend_three_image.setImageResource(R.drawable.ic_load_iname);                } else {                    iv_part_in_title_recommend_three_image.setImageBitmap(bmp3);                }                //异步加载图片，先从一级缓存、再二级缓存、最后网络获取图片                Bitmap bmp4 = imageLoader.loadBitmap(iv_part_in_title_recommend_four_image, imageurl4);                if (bmp4 == null) {                    iv_part_in_title_recommend_four_image.setImageResource(R.drawable.ic_load_iname);                } else {                    iv_part_in_title_recommend_four_image.setImageBitmap(bmp4);                }                tv_part_in_title_recommend_one_name.setText(title1);                tv_part_in_title_recommend_two_name.setText(title2);                tv_part_in_title_recommend_three_name.setText(title3);                tv_part_in_title_recommend_four_name.setText(title4);            } catch (JSONException e) {                e.printStackTrace();            }            /*==1悬赏订单==2 游戏订单*/            dataType = "1";            page = 1;            orderStatus = "进行中";            getRewardAndGameData(dataType, orderStatus, page);        } else if (showPartinReward == 1 && showPartinGame != 1) {            ll_part_in_title_show_game_reward.setVisibility(View.GONE);            ll_part_in_title_reward.setVisibility(View.VISIBLE);            tv_part_in_title_reward_having.setTextColor(getResources().getColor(R.color.yunbu_textblack));            tv_part_in_title_reward_wait_audit.setTextColor(getResources().getColor(R.color.yunbu_textgray));            tv_part_in_title_reward_finish.setTextColor(getResources().getColor(R.color.yunbu_textgray));            tv_part_in_title_reward_unpass.setTextColor(getResources().getColor(R.color.yunbu_textgray));            tv_part_in_title_reward_having_zhishiqi.setVisibility(View.VISIBLE);            tv_part_in_title_reward_wait_audit_zhishiqi.setVisibility(View.GONE);            tv_part_in_title_reward_finish_zhishiqi.setVisibility(View.GONE);            tv_part_in_title_reward_unpass_zhishiqi.setVisibility(View.GONE);            tv_part_in_title_welfare.setVisibility(View.GONE);            try {                recommendGoods = SessionSingleton.getInstance().AccountSingle.getJSONArray("rewardRecommandArray");                String imageurl1 = recommendGoods.getJSONObject(0).getString("logurl");                String imageurl2 = recommendGoods.getJSONObject(1).getString("logurl");                String imageurl3 = recommendGoods.getJSONObject(2).getString("logurl");                String imageurl4 = recommendGoods.getJSONObject(3).getString("logurl");                String title1 = recommendGoods.getJSONObject(0).getString("productName");                String title2 = recommendGoods.getJSONObject(1).getString("productName");                String title3 = recommendGoods.getJSONObject(2).getString("productName");                String title4 = recommendGoods.getJSONObject(3).getString("productName");                //异步加载图片，先从一级缓存、再二级缓存、最后网络获取图片                Bitmap bmp1 = imageLoader.loadBitmap(iv_part_in_title_recommend_one_image, imageurl1);                if (bmp1 == null) {                    iv_part_in_title_recommend_one_image.setImageResource(R.drawable.ic_load_iname);                } else {                    iv_part_in_title_recommend_one_image.setImageBitmap(bmp1);                }                //异步加载图片，先从一级缓存、再二级缓存、最后网络获取图片                Bitmap bmp2 = imageLoader.loadBitmap(iv_part_in_title_recommend_two_image, imageurl2);                if (bmp2 == null) {                    iv_part_in_title_recommend_two_image.setImageResource(R.drawable.ic_load_iname);                } else {                    iv_part_in_title_recommend_two_image.setImageBitmap(bmp2);                }                //异步加载图片，先从一级缓存、再二级缓存、最后网络获取图片                Bitmap bmp3 = imageLoader.loadBitmap(iv_part_in_title_recommend_three_image, imageurl3);                if (bmp3 == null) {                    iv_part_in_title_recommend_three_image.setImageResource(R.drawable.ic_load_iname);                } else {                    iv_part_in_title_recommend_three_image.setImageBitmap(bmp3);                }                //异步加载图片，先从一级缓存、再二级缓存、最后网络获取图片                Bitmap bmp4 = imageLoader.loadBitmap(iv_part_in_title_recommend_four_image, imageurl4);                if (bmp4 == null) {                    iv_part_in_title_recommend_four_image.setImageResource(R.drawable.ic_load_iname);                } else {                    iv_part_in_title_recommend_four_image.setImageBitmap(bmp4);                }                tv_part_in_title_recommend_one_name.setText(title1);                tv_part_in_title_recommend_two_name.setText(title2);                tv_part_in_title_recommend_three_name.setText(title3);                tv_part_in_title_recommend_four_name.setText(title4);            } catch (JSONException e) {                e.printStackTrace();            }            /*==1悬赏订单==2 游戏订单*/            dataType = "1";            page = 1;            orderStatus = "进行中";            getRewardAndGameData(dataType, orderStatus, page);        } else if (showPartinReward != 1 && showPartinGame == 1) {            ll_part_in_title_show_game_reward.setVisibility(View.GONE);            ll_part_in_title_reward.setVisibility(View.GONE);            tv_part_in_title_welfare.setVisibility(View.VISIBLE);            try {                recommendGoods = SessionSingleton.getInstance().AccountSingle.getJSONArray("gameRecommandArray");                String imageurl1 = recommendGoods.getJSONObject(0).getString("logUrl");                String imageurl2 = recommendGoods.getJSONObject(1).getString("logUrl");                String imageurl3 = recommendGoods.getJSONObject(2).getString("logUrl");                String imageurl4 = recommendGoods.getJSONObject(3).getString("logUrl");                String title1 = recommendGoods.getJSONObject(0).getString("title");                String title2 = recommendGoods.getJSONObject(1).getString("title");                String title3 = recommendGoods.getJSONObject(2).getString("title");                String title4 = recommendGoods.getJSONObject(3).getString("title");                //异步加载图片，先从一级缓存、再二级缓存、最后网络获取图片                Bitmap bmp1 = imageLoader.loadBitmap(iv_part_in_title_recommend_one_image, imageurl1);                if (bmp1 == null) {                    iv_part_in_title_recommend_one_image.setImageResource(R.drawable.ic_load_iname);                } else {                    iv_part_in_title_recommend_one_image.setImageBitmap(bmp1);                }                //异步加载图片，先从一级缓存、再二级缓存、最后网络获取图片                Bitmap bmp2 = imageLoader.loadBitmap(iv_part_in_title_recommend_two_image, imageurl2);                if (bmp2 == null) {                    iv_part_in_title_recommend_two_image.setImageResource(R.drawable.ic_load_iname);                } else {                    iv_part_in_title_recommend_two_image.setImageBitmap(bmp2);                }                //异步加载图片，先从一级缓存、再二级缓存、最后网络获取图片                Bitmap bmp3 = imageLoader.loadBitmap(iv_part_in_title_recommend_three_image, imageurl3);                if (bmp3 == null) {                    iv_part_in_title_recommend_three_image.setImageResource(R.drawable.ic_load_iname);                } else {                    iv_part_in_title_recommend_three_image.setImageBitmap(bmp3);                }                //异步加载图片，先从一级缓存、再二级缓存、最后网络获取图片                Bitmap bmp4 = imageLoader.loadBitmap(iv_part_in_title_recommend_four_image, imageurl4);                if (bmp4 == null) {                    iv_part_in_title_recommend_four_image.setImageResource(R.drawable.ic_load_iname);                } else {                    iv_part_in_title_recommend_four_image.setImageBitmap(bmp4);                }                tv_part_in_title_recommend_one_name.setText(title1);                tv_part_in_title_recommend_two_name.setText(title2);                tv_part_in_title_recommend_three_name.setText(title3);                tv_part_in_title_recommend_four_name.setText(title4);            } catch (JSONException e) {                e.printStackTrace();            }            /*==1悬赏订单==2 游戏订单*/            dataType = "2";            AllGameRead = 0;            partInListArray = new JSONArray();            XiQugame();        }        lv_part_in.setPullRefreshEnable(true);        lv_part_in.setPullLoadEnable(true);        adapter = new PartInListAdapter(context);        lv_part_in.setXListViewListener(new XListView.IXListViewListener() {            @Override            public void onRefresh() {                page = 1;                mLoading.show();                if (dataType.equals("1")) {                    getRewardAndGameData(dataType, orderStatus, page);                } else {                    AllGameRead = 0;                    partInListArray = new JSONArray();                    XiQugame();                }                Load();            }            @Override            public void onLoadMore() {                page = page + 1;                if (dataType.equals("1")) {                    mLoading.show();                    getRewardAndGameData(dataType, orderStatus, page);                } else {                }                Load();            }        });        lv_part_in.setAdapter(adapter);        lv_part_in.setOnItemClickListener(new AdapterView.OnItemClickListener() {            @Override            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {                try {                    if (dataType.equals("1")) {                        if (orderStatus.equals("进行中")) {                            SessionSingleton.getInstance().rewardDetailsSingle = partInListArray.getJSONObject(position - 1);                            Intent intent = new Intent(getActivity(), YunBuRewardActivity.class);                            intent.putExtra("REWARDTASKTYPE", "HAVINGTASK");                            startActivity(intent);                        } else if (orderStatus.equals("审核中")) {                            SessionSingleton.getInstance().rewardDetailsSingle = partInListArray.getJSONObject(position - 1);                            Intent intent = new Intent(getActivity(), YunBuRewardActivity.class);                            intent.putExtra("REWARDTASKTYPE", "HAVINGTASK");                            startActivity(intent);                        }                    } else {                        JSONObject object = partInListArray.getJSONObject(position - 1);                        if (object.getString("FinishGameChannel").equals("xiqu")) {                            Intent intent = new Intent(getActivity(), YunBuGameDetailsXiQuActivity.class);                            intent.putExtra("ADID", object.getString("adid"));                            intent.putExtra("KeFuQQ", SessionSingleton.getInstance().XiQuSingle.getString("serverQQ"));                            intent.putExtra("ShowFirst", SessionSingleton.getInstance().AccountSingle.getString("xiquShowFirstStep"));                            startActivity(intent);                        } else if (object.getString("FinishGameChannel").equals("duoyou")) {                            Intent intent = new Intent(getActivity(), YunBuGameDetailsDYActivity.class);                            intent.putExtra("ADID", object.getString("advert_id"));                            intent.putExtra("KeFuQQ", SessionSingleton.getInstance().DuoYouSingle.getString("serverQQ"));                            intent.putExtra("ShowFirst", SessionSingleton.getInstance().AccountSingle.getString("duoyouShowFirstStep"));                            startActivity(intent);                        } else if (object.getString("FinishGameChannel").equals("juxiangwan")) {                            Intent intent = new Intent(getActivity(), YunBuGameDetailsJuXiangWanActivity.class);                            intent.putExtra("ADID", object.getString("ad_id"));                            intent.putExtra("KeFuQQ", SessionSingleton.getInstance().JuXiangWanSingle.getString("serverQQ"));                            intent.putExtra("ShowFirst", SessionSingleton.getInstance().AccountSingle.getString("juxiangyouShowFirstStep"));                            startActivity(intent);                        } else if (object.getString("FinishGameChannel").equals("xianwan")) {                            Intent intent = new Intent(getActivity(), YunBuGameDetailsXianWanActivity.class);                            intent.putExtra("ADID", object.getString("adid"));                            intent.putExtra("KeFuQQ", SessionSingleton.getInstance().XianWanSingle.getString("serverQQ"));                            intent.putExtra("ShowFirst", SessionSingleton.getInstance().AccountSingle.getString("xianwanShowFirstStep"));                            startActivity(intent);                        }                    }                } catch (JSONException e) {                    e.printStackTrace();                }            }        });    }    private void Load() {        lv_part_in.stopLoadMore();        lv_part_in.stopRefresh();    }    private void setlistener() {        tv_part_in_title_reward.setOnClickListener(new View.OnClickListener() {            @RequiresApi(api = Build.VERSION_CODES.JELLY_BEAN)            @Override            public void onClick(View v) {                tv_part_in_title_reward.setBackground(getResources().getDrawable(R.color.yunbu_write));                tv_part_in_title_game.setBackground(getResources().getDrawable(R.color.yunbu_lightgreen));                tv_part_in_title_reward.setTextColor(getResources().getColor(R.color.yunbu_textblack));                tv_part_in_title_game.setTextColor(getResources().getColor(R.color.yunbu_write));                ll_part_in_title_reward.setVisibility(View.VISIBLE);                tv_part_in_title_reward_having.setTextColor(getResources().getColor(R.color.yunbu_textblack));                tv_part_in_title_reward_wait_audit.setTextColor(getResources().getColor(R.color.yunbu_textgray));                tv_part_in_title_reward_finish.setTextColor(getResources().getColor(R.color.yunbu_textgray));                tv_part_in_title_reward_unpass.setTextColor(getResources().getColor(R.color.yunbu_textgray));                tv_part_in_title_reward_having_zhishiqi.setVisibility(View.VISIBLE);                tv_part_in_title_reward_wait_audit_zhishiqi.setVisibility(View.GONE);                tv_part_in_title_reward_finish_zhishiqi.setVisibility(View.GONE);                tv_part_in_title_reward_unpass_zhishiqi.setVisibility(View.GONE);                partInListArray = new JSONArray();                if (timer != null) {                    timer.cancel();                }                mLoading.show();                page = 1;                dataType = "1";                orderStatus = "进行中";                getRewardAndGameData(dataType, orderStatus, page);            }        });        tv_part_in_title_game.setOnClickListener(new View.OnClickListener() {            @RequiresApi(api = Build.VERSION_CODES.JELLY_BEAN)            @Override            public void onClick(View v) {                tv_part_in_title_reward.setBackground(getResources().getDrawable(R.color.yunbu_lightgreen));                tv_part_in_title_game.setBackground(getResources().getDrawable(R.color.yunbu_write));                tv_part_in_title_reward.setTextColor(getResources().getColor(R.color.yunbu_write));                tv_part_in_title_game.setTextColor(getResources().getColor(R.color.yunbu_textblack));                ll_part_in_title_reward.setVisibility(View.GONE);                partInListArray = new JSONArray();                if (timer != null) {                    timer.cancel();                }                mLoading.show();                page = 1;                dataType = "2";                AllGameRead = 0;                partInListArray = new JSONArray();                XiQugame();      /*          HomeShareRunble = new Runnable() {                    public void run() {                        mmHandler.sendEmptyMessage(1);                    }                };                mmHandler.post(HomeShareRunble);                HomeShareRunble = new Runnable() {                    public void run() {                        mmHandler.sendEmptyMessage(2);                    }                };                mmHandler.post(HomeShareRunble);                HomeShareRunble = new Runnable() {                    public void run() {                        mmHandler.sendEmptyMessage(3);                    }                };                mmHandler.post(HomeShareRunble);                HomeShareRunble = new Runnable() {                    public void run() {                        mmHandler.sendEmptyMessage(4);                    }                };                mmHandler.post(HomeShareRunble);*/                if (timer != null) {                    timer.cancel();                }            }        });        /*悬赏——进行中*/        tv_part_in_title_reward_having.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                tv_part_in_title_reward_having.setTextColor(getResources().getColor(R.color.yunbu_textblack));                tv_part_in_title_reward_wait_audit.setTextColor(getResources().getColor(R.color.yunbu_textgray));                tv_part_in_title_reward_finish.setTextColor(getResources().getColor(R.color.yunbu_textgray));                tv_part_in_title_reward_unpass.setTextColor(getResources().getColor(R.color.yunbu_textgray));                tv_part_in_title_reward_having_zhishiqi.setVisibility(View.VISIBLE);                tv_part_in_title_reward_wait_audit_zhishiqi.setVisibility(View.GONE);                tv_part_in_title_reward_finish_zhishiqi.setVisibility(View.GONE);                tv_part_in_title_reward_unpass_zhishiqi.setVisibility(View.GONE);                partInListArray = new JSONArray();                if (timer != null) {                    timer.cancel();                }                mLoading.show();                page = 1;                dataType = "1";                orderStatus = "进行中";                getRewardAndGameData(dataType, orderStatus, page);            }        });        /*悬赏——待审核*/        tv_part_in_title_reward_wait_audit.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                tv_part_in_title_reward_having.setTextColor(getResources().getColor(R.color.yunbu_textgray));                tv_part_in_title_reward_wait_audit.setTextColor(getResources().getColor(R.color.yunbu_textblack));                tv_part_in_title_reward_finish.setTextColor(getResources().getColor(R.color.yunbu_textgray));                tv_part_in_title_reward_unpass.setTextColor(getResources().getColor(R.color.yunbu_textgray));                tv_part_in_title_reward_having_zhishiqi.setVisibility(View.GONE);                tv_part_in_title_reward_wait_audit_zhishiqi.setVisibility(View.VISIBLE);                tv_part_in_title_reward_finish_zhishiqi.setVisibility(View.GONE);                tv_part_in_title_reward_unpass_zhishiqi.setVisibility(View.GONE);                partInListArray = new JSONArray();                if (timer != null) {                    timer.cancel();                }                mLoading.show();                page = 1;                dataType = "1";                orderStatus = "审核中";                getRewardAndGameData(dataType, orderStatus, page);            }        });        /*悬赏——已完成*/        tv_part_in_title_reward_finish.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                tv_part_in_title_reward_having.setTextColor(getResources().getColor(R.color.yunbu_textgray));                tv_part_in_title_reward_wait_audit.setTextColor(getResources().getColor(R.color.yunbu_textgray));                tv_part_in_title_reward_finish.setTextColor(getResources().getColor(R.color.yunbu_textblack));                tv_part_in_title_reward_unpass.setTextColor(getResources().getColor(R.color.yunbu_textgray));                tv_part_in_title_reward_having_zhishiqi.setVisibility(View.GONE);                tv_part_in_title_reward_wait_audit_zhishiqi.setVisibility(View.GONE);                tv_part_in_title_reward_finish_zhishiqi.setVisibility(View.VISIBLE);                tv_part_in_title_reward_unpass_zhishiqi.setVisibility(View.GONE);                partInListArray = new JSONArray();                if (timer != null) {                    timer.cancel();                }                mLoading.show();                page = 1;                dataType = "1";                orderStatus = "审核成功";                getRewardAndGameData(dataType, orderStatus, page);            }        });        /*悬赏——未通过*/        tv_part_in_title_reward_unpass.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                tv_part_in_title_reward_having.setTextColor(getResources().getColor(R.color.yunbu_textgray));                tv_part_in_title_reward_wait_audit.setTextColor(getResources().getColor(R.color.yunbu_textgray));                tv_part_in_title_reward_finish.setTextColor(getResources().getColor(R.color.yunbu_textgray));                tv_part_in_title_reward_unpass.setTextColor(getResources().getColor(R.color.yunbu_textblack));                tv_part_in_title_reward_having_zhishiqi.setVisibility(View.GONE);                tv_part_in_title_reward_wait_audit_zhishiqi.setVisibility(View.GONE);                tv_part_in_title_reward_finish_zhishiqi.setVisibility(View.GONE);                tv_part_in_title_reward_unpass_zhishiqi.setVisibility(View.VISIBLE);                partInListArray = new JSONArray();                if (timer != null) {                    timer.cancel();                }                mLoading.show();                page = 1;                dataType = "1";                orderStatus = "审核失败";                getRewardAndGameData(dataType, orderStatus, page);            }        });        /*榜单福利*/        tv_part_in_title_welfare.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                Intent intent = new Intent(getActivity(), YunBuWelfareActivity.class);                startActivity(intent);            }        });        /*奖励记录*/        tv_part_in_title_reward_notes.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                Intent intent = new Intent(getActivity(), YunBuRewardBillActivity.class);                startActivity(intent);            }        });        iv_part_in_title_recommend_one_image.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                try {                    if (showPartinReward == 1 && showPartinGame == 1) {                        if (recommendGoods.getJSONObject(0).getString("channelName").equals("嘻趣")) {                            Intent intent = new Intent(getActivity(), YunBuGameDetailsXiQuActivity.class);                            intent.putExtra("ADID", recommendGoods.getJSONObject(0).getString("adId"));                            intent.putExtra("KeFuQQ", recommendGoods.getJSONObject(0).getString("serverQQ"));                            intent.putExtra("ShowFirst", SessionSingleton.getInstance().AccountSingle.getString("xiquShowFirstStep"));                            startActivity(intent);                        } else if (recommendGoods.getJSONObject(0).getString("channelName").equals("多游")) {                            Intent intent = new Intent(getActivity(), YunBuGameDetailsDYActivity.class);                            intent.putExtra("ADID", recommendGoods.getJSONObject(0).getString("adId"));                            intent.putExtra("KeFuQQ", recommendGoods.getJSONObject(0).getString("serverQQ"));                            intent.putExtra("ShowFirst", SessionSingleton.getInstance().AccountSingle.getString("duoyouShowFirstStep"));                            startActivity(intent);                        } else if (recommendGoods.getJSONObject(0).getString("channelName").equals("聚享游")) {                            Intent intent = new Intent(getActivity(), YunBuGameDetailsJuXiangWanActivity.class);                            intent.putExtra("ADID", recommendGoods.getJSONObject(0).getString("adId"));                            intent.putExtra("KeFuQQ", recommendGoods.getJSONObject(0).getString("serverQQ"));                            intent.putExtra("ShowFirst", SessionSingleton.getInstance().AccountSingle.getString("juxiangyouShowFirstStep"));                            startActivity(intent);                        } else if (recommendGoods.getJSONObject(0).getString("channelName").equals("闲玩")) {                            Intent intent = new Intent(getActivity(), YunBuGameDetailsXianWanActivity.class);                            intent.putExtra("ADID", recommendGoods.getJSONObject(0).getString("adId"));                            intent.putExtra("KeFuQQ", recommendGoods.getJSONObject(0).getString("serverQQ"));                            intent.putExtra("ShowFirst", SessionSingleton.getInstance().AccountSingle.getString("xianwanShowFirstStep"));                            startActivity(intent);                        }                    } else if (showPartinReward == 1 && showPartinGame != 1) {                        SessionSingleton.getInstance().rewardDetailsSingle = recommendGoods.getJSONObject(0);                        Intent intent = new Intent(getActivity(), YunBuRewardActivity.class);                        intent.putExtra("REWARDTASKTYPE", "TASKLIST");                        startActivity(intent);                    } else if (showPartinReward != 1 && showPartinGame == 1) {                        if (recommendGoods.getJSONObject(0).getString("channelName").equals("嘻趣")) {                            Intent intent = new Intent(getActivity(), YunBuGameDetailsXiQuActivity.class);                            intent.putExtra("ADID", recommendGoods.getJSONObject(0).getString("adId"));                            intent.putExtra("KeFuQQ", recommendGoods.getJSONObject(0).getString("serverQQ"));                            intent.putExtra("ShowFirst", SessionSingleton.getInstance().AccountSingle.getString("xiquShowFirstStep"));                            startActivity(intent);                        } else if (recommendGoods.getJSONObject(0).getString("channelName").equals("多游")) {                            Intent intent = new Intent(getActivity(), YunBuGameDetailsDYActivity.class);                            intent.putExtra("ADID", recommendGoods.getJSONObject(0).getString("adId"));                            intent.putExtra("KeFuQQ", recommendGoods.getJSONObject(0).getString("serverQQ"));                            intent.putExtra("ShowFirst", SessionSingleton.getInstance().AccountSingle.getString("duoyouShowFirstStep"));                            startActivity(intent);                        } else if (recommendGoods.getJSONObject(0).getString("channelName").equals("聚享游")) {                            Intent intent = new Intent(getActivity(), YunBuGameDetailsJuXiangWanActivity.class);                            intent.putExtra("ADID", recommendGoods.getJSONObject(0).getString("adId"));                            intent.putExtra("KeFuQQ", recommendGoods.getJSONObject(0).getString("serverQQ"));                            intent.putExtra("ShowFirst", SessionSingleton.getInstance().AccountSingle.getString("juxiangyouShowFirstStep"));                            startActivity(intent);                        } else if (recommendGoods.getJSONObject(0).getString("channelName").equals("闲玩")) {                            Intent intent = new Intent(getActivity(), YunBuGameDetailsXianWanActivity.class);                            intent.putExtra("ADID", recommendGoods.getJSONObject(0).getString("adId"));                            intent.putExtra("KeFuQQ", recommendGoods.getJSONObject(0).getString("serverQQ"));                            intent.putExtra("ShowFirst", SessionSingleton.getInstance().AccountSingle.getString("xianwanShowFirstStep"));                            startActivity(intent);                        }                    }                } catch (JSONException e) {                    e.printStackTrace();                }            }        });        iv_part_in_title_recommend_two_image.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                try {                    if (showPartinReward == 1 && showPartinGame == 1) {                        if (recommendGoods.getJSONObject(1).getString("channelName").equals("嘻趣")) {                            Intent intent = new Intent(getActivity(), YunBuGameDetailsXiQuActivity.class);                            intent.putExtra("ADID", recommendGoods.getJSONObject(1).getString("adId"));                            intent.putExtra("KeFuQQ", recommendGoods.getJSONObject(1).getString("serverQQ"));                            intent.putExtra("ShowFirst", SessionSingleton.getInstance().AccountSingle.getString("xiquShowFirstStep"));                            startActivity(intent);                        } else if (recommendGoods.getJSONObject(1).getString("channelName").equals("多游")) {                            Intent intent = new Intent(getActivity(), YunBuGameDetailsDYActivity.class);                            intent.putExtra("ADID", recommendGoods.getJSONObject(1).getString("adId"));                            intent.putExtra("KeFuQQ", recommendGoods.getJSONObject(1).getString("serverQQ"));                            intent.putExtra("ShowFirst", SessionSingleton.getInstance().AccountSingle.getString("duoyouShowFirstStep"));                            startActivity(intent);                        } else if (recommendGoods.getJSONObject(1).getString("channelName").equals("聚享游")) {                            Intent intent = new Intent(getActivity(), YunBuGameDetailsJuXiangWanActivity.class);                            intent.putExtra("ADID", recommendGoods.getJSONObject(1).getString("adId"));                            intent.putExtra("KeFuQQ", recommendGoods.getJSONObject(1).getString("serverQQ"));                            intent.putExtra("ShowFirst", SessionSingleton.getInstance().AccountSingle.getString("juxiangyouShowFirstStep"));                            startActivity(intent);                        } else if (recommendGoods.getJSONObject(1).getString("channelName").equals("闲玩")) {                            Intent intent = new Intent(getActivity(), YunBuGameDetailsXianWanActivity.class);                            intent.putExtra("ADID", recommendGoods.getJSONObject(1).getString("adId"));                            intent.putExtra("KeFuQQ", recommendGoods.getJSONObject(1).getString("serverQQ"));                            intent.putExtra("ShowFirst", SessionSingleton.getInstance().AccountSingle.getString("xianwanShowFirstStep"));                            startActivity(intent);                        }                    } else if (showPartinReward == 1 && showPartinGame != 1) {                        SessionSingleton.getInstance().rewardDetailsSingle = recommendGoods.getJSONObject(1);                        Intent intent = new Intent(getActivity(), YunBuRewardActivity.class);                        intent.putExtra("REWARDTASKTYPE", "TASKLIST");                        startActivity(intent);                    } else if (showPartinReward != 1 && showPartinGame == 1) {                        if (recommendGoods.getJSONObject(1).getString("channelName").equals("嘻趣")) {                            Intent intent = new Intent(getActivity(), YunBuGameDetailsXiQuActivity.class);                            intent.putExtra("ADID", recommendGoods.getJSONObject(1).getString("adId"));                            intent.putExtra("KeFuQQ", recommendGoods.getJSONObject(1).getString("serverQQ"));                            intent.putExtra("ShowFirst", SessionSingleton.getInstance().AccountSingle.getString("xiquShowFirstStep"));                            startActivity(intent);                        } else if (recommendGoods.getJSONObject(1).getString("channelName").equals("多游")) {                            Intent intent = new Intent(getActivity(), YunBuGameDetailsDYActivity.class);                            intent.putExtra("ADID", recommendGoods.getJSONObject(1).getString("adId"));                            intent.putExtra("KeFuQQ", recommendGoods.getJSONObject(1).getString("serverQQ"));                            intent.putExtra("ShowFirst", SessionSingleton.getInstance().AccountSingle.getString("duoyouShowFirstStep"));                            startActivity(intent);                        } else if (recommendGoods.getJSONObject(1).getString("channelName").equals("聚享游")) {                            Intent intent = new Intent(getActivity(), YunBuGameDetailsJuXiangWanActivity.class);                            intent.putExtra("ADID", recommendGoods.getJSONObject(1).getString("adId"));                            intent.putExtra("KeFuQQ", recommendGoods.getJSONObject(1).getString("serverQQ"));                            intent.putExtra("ShowFirst", SessionSingleton.getInstance().AccountSingle.getString("juxiangyouShowFirstStep"));                            startActivity(intent);                        } else if (recommendGoods.getJSONObject(1).getString("channelName").equals("闲玩")) {                            Intent intent = new Intent(getActivity(), YunBuGameDetailsXianWanActivity.class);                            intent.putExtra("ADID", recommendGoods.getJSONObject(1).getString("adId"));                            intent.putExtra("KeFuQQ", recommendGoods.getJSONObject(1).getString("serverQQ"));                            intent.putExtra("ShowFirst", SessionSingleton.getInstance().AccountSingle.getString("xianwanShowFirstStep"));                            startActivity(intent);                        }                    }                } catch (JSONException e) {                    e.printStackTrace();                }            }        });        iv_part_in_title_recommend_three_image.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                try {                    if (showPartinReward == 1 && showPartinGame == 1) {                        if (recommendGoods.getJSONObject(2).getString("channelName").equals("嘻趣")) {                            Intent intent = new Intent(getActivity(), YunBuGameDetailsXiQuActivity.class);                            intent.putExtra("ADID", recommendGoods.getJSONObject(2).getString("adId"));                            intent.putExtra("KeFuQQ", recommendGoods.getJSONObject(2).getString("serverQQ"));                            intent.putExtra("ShowFirst", SessionSingleton.getInstance().AccountSingle.getString("xiquShowFirstStep"));                            startActivity(intent);                        } else if (recommendGoods.getJSONObject(2).getString("channelName").equals("多游")) {                            Intent intent = new Intent(getActivity(), YunBuGameDetailsDYActivity.class);                            intent.putExtra("ADID", recommendGoods.getJSONObject(2).getString("adId"));                            intent.putExtra("KeFuQQ", recommendGoods.getJSONObject(2).getString("serverQQ"));                            intent.putExtra("ShowFirst", SessionSingleton.getInstance().AccountSingle.getString("duoyouShowFirstStep"));                            startActivity(intent);                        } else if (recommendGoods.getJSONObject(2).getString("channelName").equals("聚享游")) {                            Intent intent = new Intent(getActivity(), YunBuGameDetailsJuXiangWanActivity.class);                            intent.putExtra("ADID", recommendGoods.getJSONObject(2).getString("adId"));                            intent.putExtra("KeFuQQ", recommendGoods.getJSONObject(2).getString("serverQQ"));                            intent.putExtra("ShowFirst", SessionSingleton.getInstance().AccountSingle.getString("juxiangyouShowFirstStep"));                            startActivity(intent);                        } else if (recommendGoods.getJSONObject(2).getString("channelName").equals("闲玩")) {                            Intent intent = new Intent(getActivity(), YunBuGameDetailsXianWanActivity.class);                            intent.putExtra("ADID", recommendGoods.getJSONObject(2).getString("adId"));                            intent.putExtra("KeFuQQ", recommendGoods.getJSONObject(2).getString("serverQQ"));                            intent.putExtra("ShowFirst", SessionSingleton.getInstance().AccountSingle.getString("xianwanShowFirstStep"));                            startActivity(intent);                        }                    } else if (showPartinReward == 1 && showPartinGame != 1) {                        SessionSingleton.getInstance().rewardDetailsSingle = recommendGoods.getJSONObject(2);                        Intent intent = new Intent(getActivity(), YunBuRewardActivity.class);                        intent.putExtra("REWARDTASKTYPE", "TASKLIST");                        startActivity(intent);                    } else if (showPartinReward != 1 && showPartinGame == 1) {                        if (recommendGoods.getJSONObject(2).getString("channelName").equals("嘻趣")) {                            Intent intent = new Intent(getActivity(), YunBuGameDetailsXiQuActivity.class);                            intent.putExtra("ADID", recommendGoods.getJSONObject(2).getString("adId"));                            intent.putExtra("KeFuQQ", recommendGoods.getJSONObject(2).getString("serverQQ"));                            intent.putExtra("ShowFirst", SessionSingleton.getInstance().AccountSingle.getString("xiquShowFirstStep"));                            startActivity(intent);                        } else if (recommendGoods.getJSONObject(2).getString("channelName").equals("多游")) {                            Intent intent = new Intent(getActivity(), YunBuGameDetailsDYActivity.class);                            intent.putExtra("ADID", recommendGoods.getJSONObject(2).getString("adId"));                            intent.putExtra("KeFuQQ", recommendGoods.getJSONObject(2).getString("serverQQ"));                            intent.putExtra("ShowFirst", SessionSingleton.getInstance().AccountSingle.getString("duoyouShowFirstStep"));                            startActivity(intent);                        } else if (recommendGoods.getJSONObject(2).getString("channelName").equals("聚享游")) {                            Intent intent = new Intent(getActivity(), YunBuGameDetailsJuXiangWanActivity.class);                            intent.putExtra("ADID", recommendGoods.getJSONObject(2).getString("adId"));                            intent.putExtra("KeFuQQ", recommendGoods.getJSONObject(2).getString("serverQQ"));                            intent.putExtra("ShowFirst", SessionSingleton.getInstance().AccountSingle.getString("juxiangyouShowFirstStep"));                            startActivity(intent);                        } else if (recommendGoods.getJSONObject(2).getString("channelName").equals("闲玩")) {                            Intent intent = new Intent(getActivity(), YunBuGameDetailsXianWanActivity.class);                            intent.putExtra("ADID", recommendGoods.getJSONObject(2).getString("adId"));                            intent.putExtra("KeFuQQ", recommendGoods.getJSONObject(2).getString("serverQQ"));                            intent.putExtra("ShowFirst", SessionSingleton.getInstance().AccountSingle.getString("xianwanShowFirstStep"));                            startActivity(intent);                        }                    }                } catch (JSONException e) {                    e.printStackTrace();                }            }        });        iv_part_in_title_recommend_four_image.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                try {                    if (showPartinReward == 1 && showPartinGame == 1) {                        if (recommendGoods.getJSONObject(3).getString("channelName").equals("嘻趣")) {                            Intent intent = new Intent(getActivity(), YunBuGameDetailsXiQuActivity.class);                            intent.putExtra("ADID", recommendGoods.getJSONObject(3).getString("adId"));                            intent.putExtra("KeFuQQ", recommendGoods.getJSONObject(3).getString("serverQQ"));                            intent.putExtra("ShowFirst", SessionSingleton.getInstance().AccountSingle.getString("xiquShowFirstStep"));                            startActivity(intent);                        } else if (recommendGoods.getJSONObject(3).getString("channelName").equals("多游")) {                            Intent intent = new Intent(getActivity(), YunBuGameDetailsDYActivity.class);                            intent.putExtra("ADID", recommendGoods.getJSONObject(3).getString("adId"));                            intent.putExtra("KeFuQQ", recommendGoods.getJSONObject(3).getString("serverQQ"));                            intent.putExtra("ShowFirst", SessionSingleton.getInstance().AccountSingle.getString("duoyouShowFirstStep"));                            startActivity(intent);                        } else if (recommendGoods.getJSONObject(3).getString("channelName").equals("聚享游")) {                            Intent intent = new Intent(getActivity(), YunBuGameDetailsJuXiangWanActivity.class);                            intent.putExtra("ADID", recommendGoods.getJSONObject(3).getString("adId"));                            intent.putExtra("KeFuQQ", recommendGoods.getJSONObject(3).getString("serverQQ"));                            intent.putExtra("ShowFirst", SessionSingleton.getInstance().AccountSingle.getString("juxiangyouShowFirstStep"));                            startActivity(intent);                        } else if (recommendGoods.getJSONObject(3).getString("channelName").equals("闲玩")) {                            Intent intent = new Intent(getActivity(), YunBuGameDetailsXianWanActivity.class);                            intent.putExtra("ADID", recommendGoods.getJSONObject(3).getString("adId"));                            intent.putExtra("KeFuQQ", recommendGoods.getJSONObject(3).getString("serverQQ"));                            intent.putExtra("ShowFirst", SessionSingleton.getInstance().AccountSingle.getString("xianwanShowFirstStep"));                            startActivity(intent);                        }                    } else if (showPartinReward == 1 && showPartinGame != 1) {                        SessionSingleton.getInstance().rewardDetailsSingle = recommendGoods.getJSONObject(3);                        Intent intent = new Intent(getActivity(), YunBuRewardActivity.class);                        intent.putExtra("REWARDTASKTYPE", "TASKLIST");                        startActivity(intent);                    } else if (showPartinReward != 1 && showPartinGame == 1) {                        if (recommendGoods.getJSONObject(3).getString("channelName").equals("嘻趣")) {                            Intent intent = new Intent(getActivity(), YunBuGameDetailsXiQuActivity.class);                            intent.putExtra("ADID", recommendGoods.getJSONObject(3).getString("adId"));                            intent.putExtra("KeFuQQ", recommendGoods.getJSONObject(3).getString("serverQQ"));                            intent.putExtra("ShowFirst", SessionSingleton.getInstance().AccountSingle.getString("xiquShowFirstStep"));                            startActivity(intent);                        } else if (recommendGoods.getJSONObject(3).getString("channelName").equals("多游")) {                            Intent intent = new Intent(getActivity(), YunBuGameDetailsDYActivity.class);                            intent.putExtra("ADID", recommendGoods.getJSONObject(3).getString("adId"));                            intent.putExtra("KeFuQQ", recommendGoods.getJSONObject(3).getString("serverQQ"));                            intent.putExtra("ShowFirst", SessionSingleton.getInstance().AccountSingle.getString("duoyouShowFirstStep"));                            startActivity(intent);                        } else if (recommendGoods.getJSONObject(3).getString("channelName").equals("聚享游")) {                            Intent intent = new Intent(getActivity(), YunBuGameDetailsJuXiangWanActivity.class);                            intent.putExtra("ADID", recommendGoods.getJSONObject(3).getString("adId"));                            intent.putExtra("KeFuQQ", recommendGoods.getJSONObject(3).getString("serverQQ"));                            intent.putExtra("ShowFirst", SessionSingleton.getInstance().AccountSingle.getString("juxiangyouShowFirstStep"));                            startActivity(intent);                        } else if (recommendGoods.getJSONObject(3).getString("channelName").equals("闲玩")) {                            Intent intent = new Intent(getActivity(), YunBuGameDetailsXianWanActivity.class);                            intent.putExtra("ADID", recommendGoods.getJSONObject(3).getString("adId"));                            intent.putExtra("KeFuQQ", recommendGoods.getJSONObject(3).getString("serverQQ"));                            intent.putExtra("ShowFirst", SessionSingleton.getInstance().AccountSingle.getString("xianwanShowFirstStep"));                            startActivity(intent);                        }                    }                } catch (JSONException e) {                    e.printStackTrace();                }            }        });    }    public class PartInListAdapter extends BaseAdapter {        private LayoutInflater inflater;        public PartInListAdapter(Context context) {            //inflater = LayoutInflater.from(context);            inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);        }        @Override        public int getCount() {            return partInListArray.length();        }        @Override        public Object getItem(int position) {            return position;        }        @Override        public long getItemId(int position) {            return position;        }        @RequiresApi(api = Build.VERSION_CODES.JELLY_BEAN)        @Override        public View getView(final int position, View convertView, ViewGroup parent) {            ViewHolder holder;            ViewGameHolder gameHolder;            try {                if (dataType.equals("1")) {                    //if (convertView == null) {                    holder = new ViewHolder();                    convertView = inflater.inflate(R.layout.item_yun_bu_reward_type_part_in_having, null);                    holder.iv_item_reward_part_in_head = (ImageView) convertView.findViewById(R.id.iv_item_reward_part_in_head);                    holder.tv_item_reward_part_in_title = (TextView) convertView.findViewById(R.id.tv_item_reward_part_in_title);                    holder.tv_item_reward_part_in_msg = (TextView) convertView.findViewById(R.id.tv_item_reward_part_in_msg);                    holder.tv_item_reward_part_in_money = (TextView) convertView.findViewById(R.id.tv_item_reward_part_in_money);                    holder.ll_item_reward_part_in_end_time = (LinearLayout) convertView.findViewById(R.id.ll_item_reward_part_in_end_time);                    tv_item_reward_part_in_time = (TextView) convertView.findViewById(R.id.tv_item_reward_part_in_time);                    holder.tv_item_reward_part_in_finish_time = (TextView) convertView.findViewById(R.id.tv_item_reward_part_in_finish_time);                    holder.ll_item_reward_part_in_give_up_and_submit = (LinearLayout) convertView.findViewById(R.id.ll_item_reward_part_in_give_up_and_submit);                    holder.tv_item_reward_part_in_give_up = (TextView) convertView.findViewById(R.id.tv_item_reward_part_in_give_up);                    holder.tv_item_reward_part_in_submit = (TextView) convertView.findViewById(R.id.tv_item_reward_part_in_submit);                    holder.tv_item_reward_part_in_audit = (TextView) convertView.findViewById(R.id.tv_item_reward_part_in_audit);                  /*    convertView.setTag(holder);                  } else {                        holder = (ViewHolder) convertView.getTag();                    }*/                    final JSONObject single = partInListArray.getJSONObject(position);                    holder.tv_item_reward_part_in_title.setText(single.getString("productName"));                    holder.tv_item_reward_part_in_msg.setText(single.getString("taskType"));                    holder.tv_item_reward_part_in_money.setText("+" + single.getString("adCost") + "元");                    if (orderStatus.equals("进行中")) {                        holder.ll_item_reward_part_in_end_time.setVisibility(View.VISIBLE);                        holder.tv_item_reward_part_in_audit.setVisibility(View.GONE);                        holder.ll_item_reward_part_in_give_up_and_submit.setVisibility(View.VISIBLE);                        holder.tv_item_reward_part_in_finish_time.setVisibility(View.GONE);                        datetimeFailLong = single.getLong("datetimeFailLong");                        //调用 CountDownTimer 对象的 start() 方法开始倒计时，也不涉及到线程处理                        nowdatetime = System.currentTimeMillis();                        gettimer(nowdatetime, datetimeFailLong);                        timer.start();                        holder.tv_item_reward_part_in_give_up.setOnClickListener(new View.OnClickListener() {                            @Override                            public void onClick(View v) {                                showToast("是否执行取消任务操作，点击确认后，将取消进行该任务！");                            }                        });                        holder.tv_item_reward_part_in_submit.setOnClickListener(new View.OnClickListener() {                            @Override                            public void onClick(View v) {                                SessionSingleton.getInstance().rewardDetailsSingle = single;                                Intent intent = new Intent(getActivity(), YunBuRewardActivity.class);                                intent.putExtra("REWARDTASKTYPE", "HAVINGTASK");                                startActivity(intent);                            }                        });                    } else if (orderStatus.equals("审核中")) {                        holder.ll_item_reward_part_in_end_time.setVisibility(View.GONE);                        holder.tv_item_reward_part_in_audit.setVisibility(View.VISIBLE);                        holder.ll_item_reward_part_in_give_up_and_submit.setVisibility(View.GONE);                        holder.tv_item_reward_part_in_finish_time.setVisibility(View.VISIBLE);                        holder.tv_item_reward_part_in_audit.setText("待审核");                        String endtime = Utils.data1(single.getLong("datetimeFailLong"), "yyyy-MM-dd HH:mm:ss");                        holder.tv_item_reward_part_in_finish_time.setText("审核结束时间：" + endtime + "逾期系统将介入并通过");                    } else if (orderStatus.equals("审核成功")) {                        holder.ll_item_reward_part_in_end_time.setVisibility(View.GONE);                        holder.tv_item_reward_part_in_audit.setVisibility(View.VISIBLE);                        holder.ll_item_reward_part_in_give_up_and_submit.setVisibility(View.GONE);                        holder.tv_item_reward_part_in_finish_time.setVisibility(View.VISIBLE);                        holder.tv_item_reward_part_in_audit.setText("已完成");                        holder.tv_item_reward_part_in_finish_time.setText("完成时间：" + single.getString("finishdatatimes"));                    } else if (orderStatus.equals("审核失败")) {                        holder.ll_item_reward_part_in_end_time.setVisibility(View.GONE);                        holder.tv_item_reward_part_in_audit.setVisibility(View.VISIBLE);                        holder.ll_item_reward_part_in_give_up_and_submit.setVisibility(View.GONE);                        holder.tv_item_reward_part_in_finish_time.setVisibility(View.VISIBLE);                        holder.tv_item_reward_part_in_audit.setText("未通过");                        holder.tv_item_reward_part_in_finish_time.setText("完成时间：" + single.getString("finishdatatimes"));                    }                    //异步加载图片，先从一级缓存、再二级缓存、最后网络获取图片                    Bitmap bmp = imageLoader.loadBitmap(holder.iv_item_reward_part_in_head, single.getString("logurl"));                    if (bmp == null) {                        holder.iv_item_reward_part_in_head.setImageResource(R.drawable.ic_load_iname);                    } else {                        holder.iv_item_reward_part_in_head.setImageBitmap(bmp);                    }                    // ImageLoader.getInstance().displayImage(single.getString("logurl"), holder.iv_item_reward_part_in_head, customImageLoaderUtils_Circle.Corners(5));                } else {                    //if (convertView == null) {                    gameHolder = new ViewGameHolder();                    convertView = inflater.inflate(R.layout.item_yun_bu_game_type_part_in, null);                    gameHolder.iv_item_part_in_head = (ImageView) convertView.findViewById(R.id.iv_item_part_in_head);                    gameHolder.tv_item_part_in_title = (TextView) convertView.findViewById(R.id.tv_item_part_in_title);                    gameHolder.tv_item_part_in_msg = (TextView) convertView.findViewById(R.id.tv_item_part_in_msg);                    gameHolder.tv_item_part_in_day = (TextView) convertView.findViewById(R.id.tv_item_part_in_day);                    gameHolder.tv_item_part_in_money = (TextView) convertView.findViewById(R.id.tv_item_part_in_money);                    gameHolder.tv_item_part_in_staus = (TextView) convertView.findViewById(R.id.tv_item_part_in_staus);                     /*     convertView.setTag(gameHolder);                  } else {                        gameHolder = (ViewGameHolder) convertView.getTag();                    }*/                    JSONObject single = partInListArray.getJSONObject(position);                    if (single.getString("FinishGameChannel").equals("xiqu")) {                        gameHolder.tv_item_part_in_title.setText(single.getString("adnamecut"));                        gameHolder.tv_item_part_in_day.setText("结束时间：" + single.getString("stoptime"));                        gameHolder.tv_item_part_in_msg.setText(single.getString("intro"));                        gameHolder.tv_item_part_in_money.setText("+" + single.getString("showmoney"));                        //异步加载图片，先从一级缓存、再二级缓存、最后网络获取图片                        Bitmap bmp = imageLoader.loadBitmap(gameHolder.iv_item_part_in_head, single.getString("imgurl"));                        if (bmp == null) {                            gameHolder.iv_item_part_in_head.setImageResource(R.drawable.ic_load_iname);                        } else {                            gameHolder.iv_item_part_in_head.setImageBitmap(bmp);                        }                        // ImageLoader.getInstance().displayImage(single.getString("imgurl"), gameHolder.iv_item_part_in_head, customImageLoaderUtils_Circle.Corners(5));                    } else if (single.getString("FinishGameChannel").equals("duoyou")) {                        gameHolder.tv_item_part_in_title.setText(single.getString("title"));                        gameHolder.tv_item_part_in_msg.setText(single.getString("product_introduction"));                        gameHolder.tv_item_part_in_money.setText("+" + single.getString("price_desc") + "元");                        Long timestamp = Long.valueOf((String) single.getString("serve_end")) * 1000L;                        Date time = new Date(Long.valueOf(timestamp));                        DateFormat format = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");                        gameHolder.tv_item_part_in_day.setText("结束时间：" + format.format(time));                        //异步加载图片，先从一级缓存、再二级缓存、最后网络获取图片                        Bitmap bmp = imageLoader.loadBitmap(gameHolder.iv_item_part_in_head, single.getString("product_icon"));                        if (bmp == null) {                            gameHolder.iv_item_part_in_head.setImageResource(R.drawable.ic_load_iname);                        } else {                            gameHolder.iv_item_part_in_head.setImageBitmap(bmp);                        }                        //ImageLoader.getInstance().displayImage(single.getString("product_icon"), gameHolder.iv_item_part_in_head, customImageLoaderUtils_Circle.Corners(5));                    } else if (single.getString("FinishGameChannel").equals("xianwan")) {                        gameHolder.tv_item_part_in_title.setText(single.getString("adnamecut"));                        gameHolder.tv_item_part_in_day.setText("结束时间：" + single.getString("stoptime"));                        gameHolder.tv_item_part_in_msg.setText(single.getString("adnamecut"));                        gameHolder.tv_item_part_in_money.setText(single.getString("showmoney") + "元");                        //异步加载图片，先从一级缓存、再二级缓存、最后网络获取图片                        Bitmap bmp = imageLoader.loadBitmap(gameHolder.iv_item_part_in_head, single.getString("imgurl"));                        if (bmp == null) {                            gameHolder.iv_item_part_in_head.setImageResource(R.drawable.ic_load_iname);                        } else {                            gameHolder.iv_item_part_in_head.setImageBitmap(bmp);                        }                        //ImageLoader.getInstance().displayImage(single.getString("imgurl"), gameHolder.iv_item_part_in_head, customImageLoaderUtils_Circle.Corners(5));                    } else if (single.getString("FinishGameChannel").equals("juxiangwan")) {                        gameHolder.tv_item_part_in_title.setText(single.getString("name"));                        gameHolder.tv_item_part_in_msg.setText(single.getString("slogan"));                        gameHolder.tv_item_part_in_money.setText("+" + single.getString("max_prize") + "元");                        String stoptime = Utils.data1(single.getLong("end_time") * 1000, "yyyy-MM-dd HH:mm:ss");                        gameHolder.tv_item_part_in_day.setText("结束时间：" + stoptime);                        //异步加载图片，先从一级缓存、再二级缓存、最后网络获取图片                        Bitmap bmp = imageLoader.loadBitmap(gameHolder.iv_item_part_in_head, single.getString("images"));                        if (bmp == null) {                            gameHolder.iv_item_part_in_head.setImageResource(R.drawable.ic_load_iname);                        } else {                            gameHolder.iv_item_part_in_head.setImageBitmap(bmp);                        }                        //ImageLoader.getInstance().displayImage(single.getString("images"), gameHolder.iv_item_part_in_head, customImageLoaderUtils_Circle.Corners(5));                    }                }            } catch (Exception e) {                e.printStackTrace();            }            return convertView;        }        class ViewGameHolder {            TextView tv_item_part_in_title, tv_item_part_in_msg, tv_item_part_in_day, tv_item_part_in_money, tv_item_part_in_staus;            ImageView iv_item_part_in_head;        }        class ViewHolder {            TextView tv_item_reward_part_in_title, tv_item_reward_part_in_msg, tv_item_reward_part_in_money,                    tv_item_reward_part_in_give_up, tv_item_reward_part_in_submit, tv_item_reward_part_in_audit, tv_item_reward_part_in_finish_time;            ImageView iv_item_reward_part_in_head;            LinearLayout ll_item_reward_part_in_end_time, ll_item_reward_part_in_give_up_and_submit;        }    }    //=============================================================================================================================================================    public void getRewardAndGameData(String type, final String orderStatus, int pageIndex) {        Map<String, String> params = new HashMap<>();        params.put("chanelUserAccount", chanelUserAccount);        params.put("token", token);        params.put("type", type);        params.put("orderStatus", orderStatus);        params.put("page", String.valueOf(pageIndex));        params.put("limit", "10");        HttpUtils.doHttpReqeust("POST", reward_Url, params, new HttpUtils.StringCallback() {            @Override            public void onSuccess(String response) {                try {                    JSONObject returnJSONObject = new JSONObject(response);                    if (returnJSONObject.getString("status").equals("success")) {                        JSONArray array = returnJSONObject.getJSONArray("data");                        if (orderStatus.equals("进行中")) {                            if (array.length() != 0) {                                productId = array.getJSONObject(0).getString("productId");                            }                        }                        if (page <= 1) {                            partInListArray = array;                        } else {                            for (int i = 0; i < array.length(); i++) {                                partInListArray.put(array.getJSONObject(i));                            }                        }                        if (partInListArray.length() == 0) {                            ll_part_in_no_item.setVisibility(View.VISIBLE);                            lv_part_in.setVisibility(View.GONE);                        } else {                            ll_part_in_no_item.setVisibility(View.GONE);                            lv_part_in.setVisibility(View.VISIBLE);                        }                    } else {                        Utils.showToast(context, returnJSONObject.getString("msg"));                    }                } catch (JSONException e) {                    e.printStackTrace();                }                mLoading.dismiss();                adapter.notifyDataSetChanged();            }            @Override            public void onFaileure(int code, Exception e) {                e.printStackTrace();            }        });    }    //提示    private void showToast(final String message) {        LayoutInflater la = LayoutInflater.from(context);        View contentView = la.inflate(R.layout.pop_yun_bu_yun_toast_show, null);//自定义布局        final TextView tv_toast_show__msg = contentView.findViewById(R.id.tv_toast_show__msg);        TextView tv_toast_show_close = contentView.findViewById(R.id.tv_toast_show_close);        ImageView iv_toast_show_close = contentView.findViewById(R.id.iv_toast_show_close);        tv_toast_show__msg.setText(message);        iv_toast_show_close.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                tosatPopuo.dismiss();            }        });        contentView.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                tosatPopuo.dismiss();            }        });        tv_toast_show_close.setOnClickListener(new View.OnClickListener() {            public void onClick(View v) {                tosatPopuo.dismiss();                startRewardTask(productId);            }        });        tosatPopuo = new PopupWindow(contentView, LinearLayout.LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.MATCH_PARENT);        //设置PopupWindow的焦点        tosatPopuo.setFocusable(true);        tosatPopuo.setClippingEnabled(false);        //点击PopupWindow之外的地方PopupWindow会消失        tosatPopuo.setOutsideTouchable(true);        //showAtLocation(View parent, int gravity, int x, int y)：相对于父控件的位置（例如正中央Gravity.CENTER，下方Gravity.BOTTOM等），可以设置偏移或无偏移        tosatPopuo.showAtLocation(getActivity().getWindow().getDecorView(), Gravity.CENTER, 0, 0);        tosatPopuo.update();    }    /*取消订单*/    public void startRewardTask(final String pid) {        Map<String, String> params = new HashMap<>();        params.put("channelAccount", channelAccount);        params.put("chanelUserAccount", chanelUserAccount);        params.put("token", token);        params.put("productId", pid);        params.put("apiType", "1");        HttpUtils.doHttpReqeust("POST", givieupTaskUrl, params, new HttpUtils.StringCallback() {            @Override            public void onSuccess(String response) {                mLoading.dismiss();                try {                    JSONObject returnJSONObject = new JSONObject(response);                    if (returnJSONObject.getString("status").equals("success")) {                        String taskid = pid + "&";                        SessionSingleton.getInstance().noShowFinishRewardTaskId = SessionSingleton.getInstance().noShowFinishRewardTaskId.                                replace(taskid, "");                        partInListArray = new JSONArray();                        adapter.notifyDataSetChanged();                    } else {                        Utils.showToast(context, returnJSONObject.getString("msg"));                    }                } catch (JSONException e) {                    e.printStackTrace();                }            }            @Override            public void onFaileure(int code, Exception e) {                e.printStackTrace();            }        });    }    //嘻趣已完成游戏    private void XiQugame() {        try {            Map<String, String> params = new HashMap<>();            params.put("appid", SessionSingleton.getInstance().XiQuSingle.getString("key"));            params.put("ptype", "2");            params.put("deviceid", deviceid);            params.put("androidosv", androidosv);            params.put("msaoaid", oaid);            params.put("keycode", xiquGameSgin);            params.put("appsign", account);            params.put("adListType", "0");            params.put("adtype", "0");            HttpUtils.dogetHttpReqeust("https://h5.wangzhuantianxia.com/try/API/try_api_list?", params, new HttpUtils.StringCallback() {                @Override                public void onSuccess(String response) {                    try {                        //已注册                        JSONObject returnJSONObject = new JSONObject(response);                        if (returnJSONObject.getInt("status") == 0) {                            if (returnJSONObject.getString("items").equals("[]")) {                                // Utils.showToast(context, "没有更多了");                            } else {                                JSONArray array = returnJSONObject.getJSONArray("items");                                for (int i = 0; i < array.length(); i++) {                                    JSONObject object = array.getJSONObject(i);                                    if (!object.getString("ustatus").equals("0")) {                                        object.put("FinishGameChannel", "xiqu");                                        partInListArray.put(object);                                    }                                }                            }                        } else {                            Utils.showToast(context, returnJSONObject.getString("msg"));                        }                        getRecordDYGame();                    /*    AllGameRead = AllGameRead + 1;                        if (AllGameRead == 4) {                            mLoading.dismiss();                            if (partInListArray.length() == 0) {                                ll_part_in_no_item.setVisibility(View.VISIBLE);                                lv_part_in.setVisibility(View.GONE);                            } else {                                ll_part_in_no_item.setVisibility(View.GONE);                                lv_part_in.setVisibility(View.VISIBLE);                                adapter.notifyDataSetChanged();                            }                        }*/                    } catch (JSONException e) {                        e.printStackTrace();                    }                }                @Override                public void onFaileure(int code, Exception e) {                    e.printStackTrace();                    getRecordDYGame();               /*     AllGameRead = AllGameRead + 1;                    if (AllGameRead == 4) {                        mLoading.dismiss();                        if (partInListArray.length() == 0) {                            ll_part_in_no_item.setVisibility(View.VISIBLE);                            lv_part_in.setVisibility(View.GONE);                        } else {                            ll_part_in_no_item.setVisibility(View.GONE);                            lv_part_in.setVisibility(View.VISIBLE);                            adapter.notifyDataSetChanged();                        }                    }*/                }            });        } catch (JSONException e) {            e.printStackTrace();        }    }    //多有已完成游戏    private void getRecordDYGame() {        try {            Map<String, String> params = new HashMap<>();            params.put("media_id", SessionSingleton.getInstance().DuoYouSingle.getString("key"));            params.put("user_id", account);            params.put("device_ids", deviceIdsEncode);            params.put("device_type", "2");            params.put("sign", dySgin);            params.put("size", "300");            HttpUtils.dogetHttpReqeust("https://api.ads66.com/api/attends?", params, new HttpUtils.StringCallback() {                @Override                public void onSuccess(String response) {                    try {                        //多游游戏                        JSONObject returnJSONObject = new JSONObject(response);                        if (returnJSONObject.getInt("status_code") == 200) {                            if (returnJSONObject.getString("data").equals("[]")) {                                // Utils.showToast(context, "没有更多了");                            } else {                                JSONArray array = returnJSONObject.getJSONArray("data");                                for (int i = 0; i < array.length(); i++) {                                    JSONObject object = array.getJSONObject(i);                                    object.put("FinishGameChannel", "duoyou");                                    partInListArray.put(object);                                }                            }                        } else {                            Utils.showToast(context, returnJSONObject.getString("msg"));                        }                        getXianWanHavingGame();                     /*   AllGameRead = AllGameRead + 1;                        if (AllGameRead == 4) {                            mLoading.dismiss();                            if (partInListArray.length() == 0) {                                ll_part_in_no_item.setVisibility(View.VISIBLE);                                lv_part_in.setVisibility(View.GONE);                            } else {                                ll_part_in_no_item.setVisibility(View.GONE);                                lv_part_in.setVisibility(View.VISIBLE);                                adapter.notifyDataSetChanged();                            }                        }*/                    } catch (JSONException e) {                        e.printStackTrace();                    }                }                @Override                public void onFaileure(int code, Exception e) {                    e.printStackTrace();                    getXianWanHavingGame();                  /*  AllGameRead = AllGameRead + 1;                    if (AllGameRead == 4) {                        mLoading.dismiss();                        if (partInListArray.length() == 0) {                            ll_part_in_no_item.setVisibility(View.VISIBLE);                            lv_part_in.setVisibility(View.GONE);                        } else {                            ll_part_in_no_item.setVisibility(View.GONE);                            lv_part_in.setVisibility(View.VISIBLE);                            adapter.notifyDataSetChanged();                        }                    }*/                }            });        } catch (JSONException e) {            e.printStackTrace();        }    }    //闲玩游戏进行中游戏    private void getXianWanHavingGame() {        try {            Map<String, String> params = new HashMap<>();            params.put("ptype", "2");            params.put("androidosv", androidosv);            params.put("msaoaid", oaid);            params.put("appid", SessionSingleton.getInstance().XianWanSingle.getString("key"));            params.put("deviceid", deviceid);            params.put("appsign", account);            params.put("keycode", xianwanSgin);            params.put("xwversion", "2");            params.put("adtype", "0");            params.put("orderby", "1");            HttpUtils.dogetHttpReqeust("https://h5.17xianwan.com/adwall/api/myActionAdList?", params, new HttpUtils.StringCallback() {                @Override                public void onSuccess(String response) {                    try {                        JSONObject returnJSONObject = new JSONObject(response);                        if (returnJSONObject.getInt("status") == 0) {                            if (returnJSONObject.getJSONArray("list").length() == 0) {                                //  Utils.showToast(context, "没有更多了");                            } else {                                JSONArray array = returnJSONObject.getJSONArray("list");                                for (int i = 0; i < array.length(); i++) {                                    JSONObject object = array.getJSONObject(i);                                    object.put("FinishGameChannel", "xianwan");                                    partInListArray.put(object);                                }                            }                        } else {                            Utils.showToast(context, returnJSONObject.getString("msg"));                        }                        getJuXiangWanHavingGame();                     /*   AllGameRead = AllGameRead + 1;                        if (AllGameRead == 4) {                            mLoading.dismiss();                            if (partInListArray.length() == 0) {                                ll_part_in_no_item.setVisibility(View.VISIBLE);                                lv_part_in.setVisibility(View.GONE);                            } else {                                ll_part_in_no_item.setVisibility(View.GONE);                                lv_part_in.setVisibility(View.VISIBLE);                                adapter.notifyDataSetChanged();                            }                        }*/                    } catch (JSONException e) {                        e.printStackTrace();                    }                }                @Override                public void onFaileure(int code, Exception e) {                    e.printStackTrace();                    getJuXiangWanHavingGame();                  /*  AllGameRead = AllGameRead + 1;                    if (AllGameRead == 4) {                        mLoading.dismiss();                        if (partInListArray.length() == 0) {                            ll_part_in_no_item.setVisibility(View.VISIBLE);                            lv_part_in.setVisibility(View.GONE);                        } else {                            ll_part_in_no_item.setVisibility(View.GONE);                            lv_part_in.setVisibility(View.VISIBLE);                            adapter.notifyDataSetChanged();                        }                    }*/                }            });        } catch (JSONException e) {            e.printStackTrace();        }    }    //聚享玩进行中游戏    private void getJuXiangWanHavingGame() {        try {            String sign = Utils.getMD5(SessionSingleton.getInstance().JuXiangWanSingle.getString("key") + chanelUserAccount + SessionSingleton.getInstance().JuXiangWanSingle.getString("secret"));            Map<String, String> params = new HashMap<>();            params.put("mid", SessionSingleton.getInstance().JuXiangWanSingle.getString("key"));            params.put("resource_id", chanelUserAccount);            params.put("sign", sign);            HttpUtils.dogetHttpReqeust("http://api.juxiangwan.com/home/interface/my_play?", params, new HttpUtils.StringCallback() {                @Override                public void onSuccess(String response) {                    try {                        JSONObject returnJSONObject = new JSONObject(response);                        if (returnJSONObject.getInt("code") == 1) {                            if (returnJSONObject.getJSONObject("data").getJSONObject("play").getJSONArray("doing").length() == 0) {                                // Utils.showToast(context, "没有更多了");                            } else {                                JSONArray array = returnJSONObject.getJSONObject("data").getJSONObject("play").getJSONArray("doing");                                for (int i = 0; i < array.length(); i++) {                                    JSONObject object = array.getJSONObject(i);                                    object.put("FinishGameChannel", "juxiangwan");                                    partInListArray.put(object);                                }                            }                        } else {                            Utils.showToast(context, returnJSONObject.getString("msg"));                        }                        mLoading.dismiss();                        if (partInListArray.length() == 0) {                            ll_part_in_no_item.setVisibility(View.VISIBLE);                            lv_part_in.setVisibility(View.GONE);                        } else {                            ll_part_in_no_item.setVisibility(View.GONE);                            lv_part_in.setVisibility(View.VISIBLE);                            adapter.notifyDataSetChanged();                        }                   /*     AllGameRead = AllGameRead + 1;                        if (AllGameRead == 4) {                            mLoading.dismiss();                            if (partInListArray.length() == 0) {                                ll_part_in_no_item.setVisibility(View.VISIBLE);                                lv_part_in.setVisibility(View.GONE);                            } else {                                ll_part_in_no_item.setVisibility(View.GONE);                                lv_part_in.setVisibility(View.VISIBLE);                                adapter.notifyDataSetChanged();                            }                        }*/                    } catch (JSONException e) {                        e.printStackTrace();                    }                }                @Override                public void onFaileure(int code, Exception e) {                    e.printStackTrace();                    mLoading.dismiss();                    if (partInListArray.length() == 0) {                        ll_part_in_no_item.setVisibility(View.VISIBLE);                        lv_part_in.setVisibility(View.GONE);                    } else {                        ll_part_in_no_item.setVisibility(View.GONE);                        lv_part_in.setVisibility(View.VISIBLE);                        adapter.notifyDataSetChanged();                    }               /*     AllGameRead = AllGameRead + 1;                    if (AllGameRead == 4) {                        mLoading.dismiss();                        if (partInListArray.length() == 0) {                            ll_part_in_no_item.setVisibility(View.VISIBLE);                            lv_part_in.setVisibility(View.GONE);                        } else {                            ll_part_in_no_item.setVisibility(View.GONE);                            lv_part_in.setVisibility(View.VISIBLE);                            adapter.notifyDataSetChanged();                        }                    }*/                }            });        } catch (IOException e) {            e.printStackTrace();        } catch (JSONException e) {            e.printStackTrace();        }    }    /**     * 接收子线程传递过来的数据     */    public Handler mmHandler = new Handler() {        public void handleMessage(android.os.Message msg) {            super.handleMessage(msg);            if (msg.what == 1) {                XiQugame();            } else if (msg.what == 2) {                getRecordDYGame();            } else if (msg.what == 3) {                getXianWanHavingGame();            } else if (msg.what == 4) {                getJuXiangWanHavingGame();            }        }    };    @RequiresApi(api = Build.VERSION_CODES.JELLY_BEAN)    @Override    public void setUserVisibleHint(boolean isVisibleToUser) {        super.setUserVisibleHint(isVisibleToUser);        if (!isCreated) {            return;        }        if (isVisibleToUser) {            mLoading.show();            //进行刷新操作            if (showPartinReward == 1 && showPartinGame == 1) {                tv_part_in_title_reward.setBackground(getResources().getDrawable(R.color.yunbu_write));                tv_part_in_title_game.setBackground(getResources().getDrawable(R.color.yunbu_lightgreen));                tv_part_in_title_reward.setTextColor(getResources().getColor(R.color.yunbu_textblack));                tv_part_in_title_game.setTextColor(getResources().getColor(R.color.yunbu_write));                ll_part_in_title_show_game_reward.setVisibility(View.VISIBLE);                ll_part_in_title_reward.setVisibility(View.VISIBLE);                //tv_part_in_title_welfare.setVisibility(View.GONE);                tv_part_in_title_reward_having.setTextColor(getResources().getColor(R.color.yunbu_textblack));                tv_part_in_title_reward_wait_audit.setTextColor(getResources().getColor(R.color.yunbu_textgray));                tv_part_in_title_reward_finish.setTextColor(getResources().getColor(R.color.yunbu_textgray));                tv_part_in_title_reward_unpass.setTextColor(getResources().getColor(R.color.yunbu_textgray));                tv_part_in_title_reward_having_zhishiqi.setVisibility(View.VISIBLE);                tv_part_in_title_reward_wait_audit_zhishiqi.setVisibility(View.GONE);                tv_part_in_title_reward_finish_zhishiqi.setVisibility(View.GONE);                tv_part_in_title_reward_unpass_zhishiqi.setVisibility(View.GONE);                //*==1悬赏订单==2 游戏订单*//                dataType = "1";                page = 1;                orderStatus = "进行中";                getRewardAndGameData(dataType, orderStatus, page);                try {                    recommendGoods = SessionSingleton.getInstance().AccountSingle.getJSONArray("gameRecommandArray");                    String imageurl1 = recommendGoods.getJSONObject(0).getString("logUrl");                    String imageurl2 = recommendGoods.getJSONObject(1).getString("logUrl");                    String imageurl3 = recommendGoods.getJSONObject(2).getString("logUrl");                    String imageurl4 = recommendGoods.getJSONObject(3).getString("logUrl");                    String title1 = recommendGoods.getJSONObject(0).getString("title");                    String title2 = recommendGoods.getJSONObject(1).getString("title");                    String title3 = recommendGoods.getJSONObject(2).getString("title");                    String title4 = recommendGoods.getJSONObject(3).getString("title");                    //异步加载图片，先从一级缓存、再二级缓存、最后网络获取图片                    Bitmap bmp1 = imageLoader.loadBitmap(iv_part_in_title_recommend_one_image, imageurl1);                    if (bmp1 == null) {                        iv_part_in_title_recommend_one_image.setImageResource(R.drawable.ic_load_iname);                    } else {                        iv_part_in_title_recommend_one_image.setImageBitmap(bmp1);                    }                    //异步加载图片，先从一级缓存、再二级缓存、最后网络获取图片                    Bitmap bmp2 = imageLoader.loadBitmap(iv_part_in_title_recommend_two_image, imageurl2);                    if (bmp2 == null) {                        iv_part_in_title_recommend_two_image.setImageResource(R.drawable.ic_load_iname);                    } else {                        iv_part_in_title_recommend_two_image.setImageBitmap(bmp2);                    }                    //异步加载图片，先从一级缓存、再二级缓存、最后网络获取图片                    Bitmap bmp3 = imageLoader.loadBitmap(iv_part_in_title_recommend_three_image, imageurl3);                    if (bmp3 == null) {                        iv_part_in_title_recommend_three_image.setImageResource(R.drawable.ic_load_iname);                    } else {                        iv_part_in_title_recommend_three_image.setImageBitmap(bmp3);                    }                    //异步加载图片，先从一级缓存、再二级缓存、最后网络获取图片                    Bitmap bmp4 = imageLoader.loadBitmap(iv_part_in_title_recommend_four_image, imageurl4);                    if (bmp4 == null) {                        iv_part_in_title_recommend_four_image.setImageResource(R.drawable.ic_load_iname);                    } else {                        iv_part_in_title_recommend_four_image.setImageBitmap(bmp4);                    }                    tv_part_in_title_recommend_one_name.setText(title1);                    tv_part_in_title_recommend_two_name.setText(title2);                    tv_part_in_title_recommend_three_name.setText(title3);                    tv_part_in_title_recommend_four_name.setText(title4);                } catch (JSONException e) {                    e.printStackTrace();                }/*                tv_part_in_title_reward.setBackground(getResources().getDrawable(R.color.lightgreen));                tv_part_in_title_game.setBackground(getResources().getDrawable(R.color.write));                tv_part_in_title_reward.setTextColor(getResources().getColor(R.color.write));                tv_part_in_title_game.setTextColor(getResources().getColor(R.color.yunbu_textblack));                ll_part_in_title_show_game_reward.setVisibility(View.VISIBLE);                ll_part_in_title_reward.setVisibility(View.GONE);*/                //*==1悬赏订单==2 游戏订单*//       /*         dataType = "2";                AllGameRead = 0;                partInListArray = new JSONArray();                XiQugame();*/          /*      HomeShareRunble = new Runnable() {                    public void run() {                        mmHandler.sendEmptyMessage(1);                    }                };                mmHandler.post(HomeShareRunble);                HomeShareRunble = new Runnable() {                    public void run() {                        mmHandler.sendEmptyMessage(2);                    }                };                mmHandler.post(HomeShareRunble);                HomeShareRunble = new Runnable() {                    public void run() {                        mmHandler.sendEmptyMessage(3);                    }                };                mmHandler.post(HomeShareRunble);                HomeShareRunble = new Runnable() {                    public void run() {                        mmHandler.sendEmptyMessage(4);                    }                };                mmHandler.post(HomeShareRunble);*/            } else if (showPartinReward == 1 && showPartinGame != 1) {                ll_part_in_title_show_game_reward.setVisibility(View.GONE);                ll_part_in_title_reward.setVisibility(View.VISIBLE);                tv_part_in_title_welfare.setVisibility(View.GONE);                tv_part_in_title_reward_having.setTextColor(getResources().getColor(R.color.yunbu_textblack));                tv_part_in_title_reward_wait_audit.setTextColor(getResources().getColor(R.color.yunbu_textgray));                tv_part_in_title_reward_finish.setTextColor(getResources().getColor(R.color.yunbu_textgray));                tv_part_in_title_reward_unpass.setTextColor(getResources().getColor(R.color.yunbu_textgray));                tv_part_in_title_reward_having_zhishiqi.setVisibility(View.VISIBLE);                tv_part_in_title_reward_wait_audit_zhishiqi.setVisibility(View.GONE);                tv_part_in_title_reward_finish_zhishiqi.setVisibility(View.GONE);                tv_part_in_title_reward_unpass_zhishiqi.setVisibility(View.GONE);                try {                    recommendGoods = SessionSingleton.getInstance().AccountSingle.getJSONArray("rewardRecommandArray");                    String imageurl1 = recommendGoods.getJSONObject(0).getString("logurl");                    String imageurl2 = recommendGoods.getJSONObject(1).getString("logurl");                    String imageurl3 = recommendGoods.getJSONObject(2).getString("logurl");                    String imageurl4 = recommendGoods.getJSONObject(3).getString("logurl");                    String title1 = recommendGoods.getJSONObject(0).getString("productName");                    String title2 = recommendGoods.getJSONObject(1).getString("productName");                    String title3 = recommendGoods.getJSONObject(2).getString("productName");                    String title4 = recommendGoods.getJSONObject(3).getString("productName");                    //异步加载图片，先从一级缓存、再二级缓存、最后网络获取图片                    Bitmap bmp1 = imageLoader.loadBitmap(iv_part_in_title_recommend_one_image, imageurl1);                    if (bmp1 == null) {                        iv_part_in_title_recommend_one_image.setImageResource(R.drawable.ic_load_iname);                    } else {                        iv_part_in_title_recommend_one_image.setImageBitmap(bmp1);                    }                    //异步加载图片，先从一级缓存、再二级缓存、最后网络获取图片                    Bitmap bmp2 = imageLoader.loadBitmap(iv_part_in_title_recommend_two_image, imageurl2);                    if (bmp2 == null) {                        iv_part_in_title_recommend_two_image.setImageResource(R.drawable.ic_load_iname);                    } else {                        iv_part_in_title_recommend_two_image.setImageBitmap(bmp2);                    }                    //异步加载图片，先从一级缓存、再二级缓存、最后网络获取图片                    Bitmap bmp3 = imageLoader.loadBitmap(iv_part_in_title_recommend_three_image, imageurl3);                    if (bmp3 == null) {                        iv_part_in_title_recommend_three_image.setImageResource(R.drawable.ic_load_iname);                    } else {                        iv_part_in_title_recommend_three_image.setImageBitmap(bmp3);                    }                    //异步加载图片，先从一级缓存、再二级缓存、最后网络获取图片                    Bitmap bmp4 = imageLoader.loadBitmap(iv_part_in_title_recommend_four_image, imageurl4);                    if (bmp4 == null) {                        iv_part_in_title_recommend_four_image.setImageResource(R.drawable.ic_load_iname);                    } else {                        iv_part_in_title_recommend_four_image.setImageBitmap(bmp4);                    }                    tv_part_in_title_recommend_one_name.setText(title1);                    tv_part_in_title_recommend_two_name.setText(title2);                    tv_part_in_title_recommend_three_name.setText(title3);                    tv_part_in_title_recommend_four_name.setText(title4);                } catch (JSONException e) {                    e.printStackTrace();                }                //*==1悬赏订单==2 游戏订单*//                dataType = "1";                page = 1;                orderStatus = "进行中";                getRewardAndGameData(dataType, orderStatus, page);            } else if (showPartinReward != 1 && showPartinGame == 1) {                ll_part_in_title_show_game_reward.setVisibility(View.GONE);                tv_part_in_title_welfare.setVisibility(View.VISIBLE);                ll_part_in_title_reward.setVisibility(View.GONE);                try {                    recommendGoods = SessionSingleton.getInstance().AccountSingle.getJSONArray("gameRecommandArray");                    String imageurl1 = recommendGoods.getJSONObject(0).getString("logUrl");                    String imageurl2 = recommendGoods.getJSONObject(1).getString("logUrl");                    String imageurl3 = recommendGoods.getJSONObject(2).getString("logUrl");                    String imageurl4 = recommendGoods.getJSONObject(3).getString("logUrl");                    String title1 = recommendGoods.getJSONObject(0).getString("title");                    String title2 = recommendGoods.getJSONObject(1).getString("title");                    String title3 = recommendGoods.getJSONObject(2).getString("title");                    String title4 = recommendGoods.getJSONObject(3).getString("title");                    //异步加载图片，先从一级缓存、再二级缓存、最后网络获取图片                    Bitmap bmp1 = imageLoader.loadBitmap(iv_part_in_title_recommend_one_image, imageurl1);                    if (bmp1 == null) {                        iv_part_in_title_recommend_one_image.setImageResource(R.drawable.ic_load_iname);                    } else {                        iv_part_in_title_recommend_one_image.setImageBitmap(bmp1);                    }                    //异步加载图片，先从一级缓存、再二级缓存、最后网络获取图片                    Bitmap bmp2 = imageLoader.loadBitmap(iv_part_in_title_recommend_two_image, imageurl2);                    if (bmp2 == null) {                        iv_part_in_title_recommend_two_image.setImageResource(R.drawable.ic_load_iname);                    } else {                        iv_part_in_title_recommend_two_image.setImageBitmap(bmp2);                    }                    //异步加载图片，先从一级缓存、再二级缓存、最后网络获取图片                    Bitmap bmp3 = imageLoader.loadBitmap(iv_part_in_title_recommend_three_image, imageurl3);                    if (bmp3 == null) {                        iv_part_in_title_recommend_three_image.setImageResource(R.drawable.ic_load_iname);                    } else {                        iv_part_in_title_recommend_three_image.setImageBitmap(bmp3);                    }                    //异步加载图片，先从一级缓存、再二级缓存、最后网络获取图片                    Bitmap bmp4 = imageLoader.loadBitmap(iv_part_in_title_recommend_four_image, imageurl4);                    if (bmp4 == null) {                        iv_part_in_title_recommend_four_image.setImageResource(R.drawable.ic_load_iname);                    } else {                        iv_part_in_title_recommend_four_image.setImageBitmap(bmp4);                    }                    tv_part_in_title_recommend_one_name.setText(title1);                    tv_part_in_title_recommend_two_name.setText(title2);                    tv_part_in_title_recommend_three_name.setText(title3);                    tv_part_in_title_recommend_four_name.setText(title4);                } catch (JSONException e) {                    e.printStackTrace();                }                //*==1悬赏订单==2 游戏订单*//*                dataType = "2";                AllGameRead = 0;                partInListArray = new JSONArray();                XiQugame();            /*    HomeShareRunble = new Runnable() {                    public void run() {                        mmHandler.sendEmptyMessage(1);                    }                };                mmHandler.post(HomeShareRunble);                HomeShareRunble = new Runnable() {                    public void run() {                        mmHandler.sendEmptyMessage(2);                    }                };                mmHandler.post(HomeShareRunble);                HomeShareRunble = new Runnable() {                    public void run() {                        mmHandler.sendEmptyMessage(3);                    }                };                mmHandler.post(HomeShareRunble);                HomeShareRunble = new Runnable() {                    public void run() {                        mmHandler.sendEmptyMessage(4);                    }                };                mmHandler.post(HomeShareRunble);*/            }        } else {            // 相当于Fragment的onPause        }    }    //=============================================================================================================================================================    private void gettimer(Long time1, Long time2) {        timer = new CountDownTimer(time2 - time1, 1000) {            public void onTick(long millisUntilFinished) {                tv_item_reward_part_in_time.setText(formatLongToTimeStr(millisUntilFinished));            }            public void onFinish() {                String taskid = productId + "&";                SessionSingleton.getInstance().noShowFinishRewardTaskId = SessionSingleton.getInstance().noShowFinishRewardTaskId.                        replace(taskid, "");                timer.cancel();                page = 1;                getRewardAndGameData(dataType, orderStatus, page);            }        };    }    public String formatLongToTimeStr(Long millisecond) {        int hour = (int) ((millisecond / 1000) / 60 / 60);        int minute = (int) ((millisecond / 1000) / 60);        int second = (int) ((millisecond / 1000) % 60);        //second = millisecond.intValue() ;        if (second > 60) {            minute = second / 60;   //取整            second = second % 60;   //取余        }        if (minute > 60) {            hour = minute / 60;            minute = minute % 60;        }        String strtime = hour + "：" + minute + "：" + second;        return strtime;    }    @Override    public void onDestroy() {        super.onDestroy();        if (timer != null) {            timer.cancel();        }    }}